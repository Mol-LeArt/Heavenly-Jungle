{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/dashboardV1/src/expMinter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Mint from './Mint';\nimport ImageUpload from './ImageUpload';\nimport { GlobalContext } from './GlobalContext';\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  _s();\n\n  // ----- useState\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [sale, setSale] = useState('');\n  const [ethPrice, setEthPrice] = useState('');\n  const [coinPrice, setCoinPrice] = useState('');\n  const [img, setImg] = useState(null);\n  const [compliance, setCompliance] = useState(false);\n  const [metadata, setMetadata] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState('');\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  window.addEventListener('load', async function () {\n    if (user) {\n      await getNetwork();\n      setUser(user);\n      setAccount(user.get(\"ethAddress\"));\n    }\n  }); // ----- useContext\n  //  const { account } = useContext(GlobalContext)\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAccount(user.get(\"ethAddress\"));\n  };\n\n  const getFileForUpload = img => {\n    setImg(img);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance\n      };\n      setMetadata(nft);\n    } else {\n      alert('You must accept!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mx-auto px-4 my-10 max-w-sm space-y-10 font-mono\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-5xl font-bold text-center\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: onLogin,\n      children: account + ' - ' + chain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"space-y-4\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Put on sale?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: sale,\n          onChange: e => setSale(e.target.value),\n          placeholder: \"Yes = 1, no = 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: ethPrice,\n          onChange: e => setEthPrice(e.target.value),\n          placeholder: \"Enter amount in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coins\",\n          children: \"No. of Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: coinPrice,\n          onChange: e => setCoinPrice(e.target.value),\n          placeholder: \"Enter amount in coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n          getFileForUpload: getFileForUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: metadata && /*#__PURE__*/_jsxDEV(Mint, {\n          metadata: metadata,\n          sale: sale,\n          ethPrice: ethPrice,\n          coinPrice: coinPrice,\n          img: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Checkbox\",\n          checked: compliance,\n          onChange: e => setCompliance(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"I agree to XYZ.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md\",\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintNFT, \"9Z2hg+e0RSwGJWYZ88JpAzf6gPM=\");\n\n_c = MintNFT;\nexport default MintNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintNFT\");","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/src/expMinter.js"],"names":["React","useState","useContext","Mint","ImageUpload","GlobalContext","DefaultButton","PrimaryButton","DangerButton","BrandButton","moralis","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","MintNFT","title","setTitle","description","setDescription","sale","setSale","ethPrice","setEthPrice","coinPrice","setCoinPrice","img","setImg","compliance","setCompliance","metadata","setMetadata","account","setAccount","chain","setChain","initialUser","User","current","user","setUser","window","addEventListener","getNetwork","get","onLogin","authenticate","getFileForUpload","onSubmit","e","preventDefault","nft","alert","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Mint from './Mint'\nimport ImageUpload from './ImageUpload'\nimport { GlobalContext } from './GlobalContext'\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  // ----- useState\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [sale, setSale] = useState('')\n  const [ethPrice, setEthPrice] = useState('')\n  const [coinPrice, setCoinPrice] = useState('')\n  const [img, setImg] = useState(null)\n  const [compliance, setCompliance] = useState(false)\n  const [metadata, setMetadata] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [chain, setChain] = useState('')\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n\n window.addEventListener( 'load', async function() {  if (user) { await getNetwork(); setUser(user); setAccount(user.get(\"ethAddress\") ); } }) ;\n\n\n  // ----- useContext\n//  const { account } = useContext(GlobalContext)\n\n    const onLogin = async () => { await getNetwork(); const user = await moralis.authenticate(); setUser(user); setAccount(user.get(\"ethAddress\") ); };\n\n  const getFileForUpload = (img) => {\n    setImg(img)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance,\n      }\n      setMetadata(nft)\n    } else {\n      alert('You must accept!')\n    }\n  }\n\n  return (\n    <div class='mx-auto px-4 my-10 max-w-sm space-y-10 font-mono'>\n      <div class='text-5xl font-bold text-center'>Mint NFT</div>\n        <PrimaryButton onClick={onLogin} >{account + ' - ' + chain}</PrimaryButton>\n      <form class='space-y-4' onSubmit={onSubmit}>\n        <div>\n          <div>Title</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900'\n            type='text'\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder='Enter Title'\n          />\n        </div>\n\n        <div>\n          <div>Description</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder='Enter Description'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='sale'>Put on sale?</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={sale}\n            onChange={(e) => setSale(e.target.value)}\n            placeholder='Yes = 1, no = 0'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='price'>Price in Ξ</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={ethPrice}\n            onChange={(e) => setEthPrice(e.target.value)}\n            placeholder='Enter amount in Ξ'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='coins'>No. of Coins</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={coinPrice}\n            onChange={(e) => setCoinPrice(e.target.value)}\n            placeholder='Enter amount in coins'\n          />\n        </div>\n\n        <div>\n          <ImageUpload getFileForUpload={getFileForUpload} />\n        </div>\n\n        <div>\n          {metadata && (\n            <Mint\n              metadata={metadata}\n              sale={sale}\n              ethPrice={ethPrice}\n              coinPrice={coinPrice}\n              img={img}\n            />\n          )}\n        </div>\n\n        <div class='flex justify-center items-center space-x-2'>\n          <input\n            type='Checkbox'\n            checked={compliance}\n            onChange={(e) => setCompliance(e.target.checked)}\n          />\n          <span>I agree to XYZ.</span>\n        </div>\n\n        <div class='flex justify-center'>\n          <button class='py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md'>\n            Mint\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default MintNFT\n"]},"metadata":{},"sourceType":"module"}