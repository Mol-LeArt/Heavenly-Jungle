{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/moralis-react-app/src/puiUserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport { Grid, FlexCol } from 'pivotal-ui/react/flex-grids';\nimport { Panel } from 'pivotal-ui/react/panels';\nimport { Divider } from 'pivotal-ui/react/dividers';\nimport { Image } from 'pivotal-ui/react/images';\nimport { Input } from 'pivotal-ui/react/inputs';\nimport { Modal } from 'pivotal-ui/react/modal';\nimport { Checkbox } from 'pivotal-ui/react/checkbox';\nimport { Radio, RadioGroup } from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers';\nimport OrgModal from './puiOrgModal';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\nconst orgaddresses = [];\n\nfunction App() {\n  _s();\n\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [clist, setList] = useState('');\n  const [address, setAddress] = useState('Connect Wallet');\n  const [chain, setChain] = useState('');\n  const [connect, toggleConnect] = useState(false);\n  const [twitter, setTwitter] = useState('');\n  const [instagram, setInstagram] = useState('');\n  const Commons = moralis.Object.extend(\"Commons\", {// Instance methods\n    // hasSuperHumanStrength: function () {  return this.get(\"strength\") > 18;  },\n    // Instance properties go in an initialize method\n    //initialize: function (attrs, options) { alert( 'hrr' );   }\n  }, {\n    newCommons: function () {\n      const commons = new Commons();\n      commons.set(\"name\", document.getElementById('commonsname').value);\n      commons.set(\"vaultsymbol\", document.getElementById('vaultsymbol').value);\n      commons.set(\"organizer\", document.getElementById('organizer').value);\n      commons.set(\"vaultname\", document.getElementById('vaultname').value);\n      return commons;\n    }\n  });\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  window.addEventListener('load', async function () {\n    if (user) {\n      await getNetwork();\n      setUser(user);\n      setAddress(user.get(\"ethAddress\"));\n    }\n  });\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAddress(user.get(\"ethAddress\"));\n  };\n\n  const onLogout = () => {\n    moralis.User.logOut();\n    setUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      title: 'Overview',\n      titleCols: [/*#__PURE__*/_jsxDEV(FlexCol, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: onLogin,\n          children: address + ' - ' + chain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 68\n      }, this)],\n      style: {\n        padding: '8px',\n        background: '#f2f2f2'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: twitter,\n            id: \"twitter\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 21\n  }, this);\n}\n\n_s(App, \"nV5vu0hzl6G8OtodcksjGRrYKy8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielo/Development/ui/moralis-react-app/src/puiUserProfile.js"],"names":["React","useState","ReactDOM","DefaultButton","PrimaryButton","DangerButton","BrandButton","Grid","FlexCol","Panel","Divider","Image","Input","Modal","Checkbox","Radio","RadioGroup","ethers","OrgModal","moralis","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","orgaddresses","App","initialUser","User","current","user","setUser","clist","setList","address","setAddress","chain","setChain","connect","toggleConnect","twitter","setTwitter","instagram","setInstagram","Commons","Object","extend","newCommons","commons","set","document","getElementById","value","provider","providers","Web3Provider","window","ethereum","addEventListener","getNetwork","get","then","network","console","log","chainId","catch","err","alert","onLogin","authenticate","onLogout","logOut","title","titleCols","style","padding","background","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,YAAtC,EAAoDC,WAApD,QAAsE,0BAAtE;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,6BAA5B;AACA,SAAQC,KAAR,QAAoB,yBAApB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SAAQC,KAAR,QAAoB,yBAApB;AACA,SAAQC,KAAR,QAAoB,yBAApB;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,wBAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,OAAO,WAAP;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAIAA,OAAO,CAACC,UAAR,CAAmBC,OAAO,CAACC,GAAR,CAAYC,gCAA/B;AACAJ,OAAO,CAACK,SAAR,GAAoBH,OAAO,CAACC,GAAR,CAAYG,4BAAhC;AAEA,MAAMC,YAAY,GAAG,EAArB;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEP,QAAMC,WAAW,GAAGT,OAAO,CAACU,IAAR,CAAaC,OAAb,EAApB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC2B,WAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,OAAR,IAAmBjC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,gBAAD,CAAtC;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsC,OAAD,EAAUC,aAAV,IAA2BvC,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACwC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC0C,SAAD,EAAYC,YAAZ,IAA4B3C,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM4C,OAAO,GAAG1B,OAAO,CAAC2B,MAAR,CAAeC,MAAf,CAAuB,SAAvB,EAChB,CACE;AACG;AACC;AACD;AAJL,GADgB,EAOhB;AACIC,IAAAA,UAAU,EAAE,YAAW;AACK,YAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAa,MAAb,EAA4BC,QAAQ,CAACC,cAAT,CAAyB,aAAzB,EAAyCC,KAArE;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAb,EAA4BC,QAAQ,CAACC,cAAT,CAAyB,aAAzB,EAAyCC,KAArE;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAA4BC,QAAQ,CAACC,cAAT,CAAyB,WAAzB,EAAyCC,KAArE;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAA4BC,QAAQ,CAACC,cAAT,CAAyB,WAAzB,EAAyCC,KAArE;AACA,aAAOJ,OAAP;AACH;AAR7B,GAPgB,CAAhB;AAiBD,QAAMK,QAAQ,GAAG,IAAIrC,MAAM,CAACsC,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AAEDD,EAAAA,MAAM,CAACE,gBAAP,CAAyB,MAAzB,EAAiC,kBAAiB;AACD,QAAI5B,IAAJ,EACA;AACK,YAAM6B,UAAU,EAAhB;AACA5B,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,UAAU,CAACL,IAAI,CAAC8B,GAAL,CAAS,YAAT,CAAD,CAAV;AACJ;AAEL,GAR7C;;AAYN,QAAMD,UAAU,GAAG,MAAM;AACrBN,IAAAA,QAAQ,CACLM,UADH,GAEGE,IAFH,CAESC,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,OAAO,CAACG,OAA3C;;AACA,UAAIH,OAAO,CAACG,OAAR,KAAoB,GAAxB,EAA6B;AAC3B5B,QAAAA,QAAQ,CAAC,MAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHD,MAGO,IAAIuB,OAAO,CAACG,OAAR,KAAoB,CAAxB,EAA2B;AAChC5B,QAAAA,QAAQ,CAAC,SAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHM,MAGA,IAAIuB,OAAO,CAACG,OAAR,KAAoB,CAAxB,EAA2B;AAChC5B,QAAAA,QAAQ,CAAC,SAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHM,MAGA,IAAIuB,OAAO,CAACG,OAAR,KAAoB,CAAxB,EAA2B;AAChC5B,QAAAA,QAAQ,CAAC,SAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHM,MAGA,IAAIuB,OAAO,CAACG,OAAR,KAAoB,EAAxB,EAA4B;AACjC5B,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHM,MAGA;AACLwB,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,KAtBH,EAuBGE,KAvBH,CAuBUC,GAAD,IAAS;AACdC,MAAAA,KAAK,CAAE,SAASD,GAAX,CAAL;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KA1BH;AA2BD,GA5BH;;AA8BO,QAAME,OAAO,GAAG,YAAY;AACK,UAAMV,UAAU,EAAhB;AACA,UAAM7B,IAAI,GAAG,MAAMZ,OAAO,CAACoD,YAAR,EAAnB;AACAvC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,IAAAA,UAAU,CAACL,IAAI,CAAC8B,GAAL,CAAS,YAAT,CAAD,CAAV;AACH,GAL9B;;AAOA,QAAMW,QAAQ,GAAG,MAAM;AAAGrD,IAAAA,OAAO,CAACU,IAAR,CAAa4C,MAAb;AAAuBzC,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAgB,GAAjE;;AAGA,sBACa;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,KAAD;AAAY0C,MAAAA,KAAK,EAAE,UAAnB;AAA+BC,MAAAA,SAAS,EAAE,cAAC,QAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAA,+BAAe,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEL,OAAxB;AAAA,oBAAmCnC,OAAO,GAAG,KAAV,GAAkBE;AAArD;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,cAAD,CAA1C;AAAkJuC,MAAAA,KAAK,EAAE;AAAGC,QAAAA,OAAO,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAzJ;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAoBF,UAAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE;AAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAcH,UAAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB;AAAA,iCAAyC,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEpC,OAApB;AAA6B,YAAA,EAAE,EAAC,SAAhC;AAA0C,YAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADb;AAoBN;;GAtGQd,G;;KAAAA,G;AAwGT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\n\nimport OrgModal from './puiOrgModal';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [twitter, setTwitter] = useState('');\n        const [instagram, setInstagram] = useState('');\n\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n             // hasSuperHumanStrength: function () {  return this.get(\"strength\") > 18;  },\n              // Instance properties go in an initialize method\n             //initialize: function (attrs, options) { alert( 'hrr' );   }\n        }, \n        {  \n            newCommons: function() { \n                                        const commons = new Commons();\n                                        commons.set( \"name\",        document.getElementById( 'commonsname' ).value  );\n                                        commons.set( \"vaultsymbol\", document.getElementById( 'vaultsymbol' ).value  );\n                                        commons.set( \"organizer\",   document.getElementById( 'organizer'   ).value  ); \n                                        commons.set( \"vaultname\",   document.getElementById( 'vaultname'   ).value  ); \n                                        return commons; \n                                    }\n        });\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      window.addEventListener( 'load', async function() {    \n                                                       if (user) \n                                                       {\n                                                            await getNetwork();\n                                                            setUser(user);\n                                                            setAddress(user.get(\"ethAddress\") ); \n                                                       }\n\n                                                  }) ;\n\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                    };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n\n       return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={twitter} id=\"twitter\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                       \n                      </Panel>\n                    </div>\n               );\n\n\n\n\n\n\n   \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}