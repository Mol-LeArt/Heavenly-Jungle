{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/dashboardV1/src/expMinter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Mint from './Mint';\nimport ImageUpload from './ImageUpload';\nimport { GlobalContext } from './GlobalContext';\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  _s();\n\n  // ----- useState\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [sale, setSale] = useState('');\n  const [ethPrice, setEthPrice] = useState('');\n  const [coinPrice, setCoinPrice] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [compliance, setCompliance] = useState(false);\n  const [metadata, setMetadata] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState('');\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [connect, toggleConnect] = useState(false);\n  const [imageHash, setImageHash] = useState('');\n  const [imageUrl, setImageUrl] = useState('profile.jpg');\n  const provider = new ethers.providers.Web3Provider(window.ethereum); //window.addEventListener( 'load', async function() {  if (user) { await getNetwork(); setUser(user); setAccount(user.get(\"ethAddress\") ); } }) ;\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAccount(user.get(\"ethAddress\"));\n  };\n\n  const getFileForUpload = img => {\n    setImg(img);\n  }; //On file select (from the pop up)\n\n\n  const onFileChange = event => {\n    // Update the state\n    setImageFile(event.target.files[0]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance\n      };\n      setMetadata(nft);\n    } else {\n      alert('You must accept!');\n    }\n  };\n\n  const doMint = async () => {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append(\"file\", img, img.name);\n    const res = await axios.post(url, data, {\n      maxContentLength: \"Infinity\",\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC,\n        pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE\n      }\n    });\n    console.log(res.data);\n    setImageHash(res.data.IpfsHash);\n    setImageUrl('https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash);\n  };\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mx-auto px-4 my-10 max-w-sm space-y-10 font-mono\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-5xl font-bold text-center\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: onLogin,\n      children: account + ' - ' + chain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"space-y-4\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Put on sale?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: sale,\n          onChange: e => setSale(e.target.value),\n          placeholder: \"Yes = 1, no = 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: ethPrice,\n          onChange: e => setEthPrice(e.target.value),\n          placeholder: \"Enter amount in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coins\",\n          children: \"No. of Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: coinPrice,\n          onChange: e => setCoinPrice(e.target.value),\n          placeholder: \"Enter amount in coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Checkbox\",\n          checked: compliance,\n          onChange: e => setCompliance(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"I agree to XYZ.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md\",\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintNFT, \"v/7SZhIg1MXObKxoHu2EUwAdvFU=\");\n\n_c = MintNFT;\nexport default MintNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintNFT\");","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/src/expMinter.js"],"names":["React","useState","useContext","Mint","ImageUpload","GlobalContext","DefaultButton","PrimaryButton","DangerButton","BrandButton","moralis","ethers","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","MintNFT","title","setTitle","description","setDescription","sale","setSale","ethPrice","setEthPrice","coinPrice","setCoinPrice","imageFile","setImageFile","compliance","setCompliance","metadata","setMetadata","account","setAccount","chain","setChain","initialUser","User","current","user","setUser","connect","toggleConnect","imageHash","setImageHash","imageUrl","setImageUrl","provider","providers","Web3Provider","window","ethereum","onLogin","getNetwork","authenticate","get","getFileForUpload","img","setImg","onFileChange","event","target","files","onSubmit","e","preventDefault","nft","alert","doMint","url","data","FormData","append","name","res","axios","post","maxContentLength","headers","_boundary","pinata_api_key","REACT_APP_PINATA_PUBLIC","pinata_secret_api_key","REACT_APP_PINATA_PRIVATE","console","log","IpfsHash","then","network","chainId","catch","err","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Mint from './Mint'\nimport ImageUpload from './ImageUpload'\nimport { GlobalContext } from './GlobalContext'\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\nimport { ethers } from 'ethers'\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  // ----- useState\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [sale, setSale] = useState('')\n  const [ethPrice, setEthPrice] = useState('')\n  const [coinPrice, setCoinPrice] = useState('')\n  const [imageFile, setImageFile] = useState(null)\n  const [compliance, setCompliance] = useState(false)\n  const [metadata, setMetadata] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [chain, setChain] = useState('')\n  const initialUser = moralis.User.current()\n  const [user, setUser] = useState(initialUser)\n  const [connect, toggleConnect] = useState(false)\n  const [imageHash, setImageHash] = useState('');\n  const [imageUrl, setImageUrl] = useState('profile.jpg');\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\n //window.addEventListener( 'load', async function() {  if (user) { await getNetwork(); setUser(user); setAccount(user.get(\"ethAddress\") ); } }) ;\n\n  const onLogin = async () => { await getNetwork(); const user = await moralis.authenticate(); setUser(user); setAccount(user.get(\"ethAddress\") ); };\n\n  const getFileForUpload = (img) => {\n    setImg(img)\n  }\n\n//On file select (from the pop up)\n\tconst onFileChange = event => {\n\t\t// Update the state\n\t    setImageFile(event.target.files[0]);\n\t};\n\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance,\n      }\n      setMetadata(nft)\n    } else {\n      alert('You must accept!')\n    }\n  }\n\n    const doMint = async () => {\n                                const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n                                let   data = new FormData();\n                                data.append(\"file\", img, img.name );\n                                const res = await axios.post(   url, data, {  maxContentLength: \"Infinity\", \n                                                                headers: { \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n                                                                pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC,\n                                                                pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE,            },   });\n                                console.log(res.data);\n                                setImageHash( res.data.IpfsHash );\n                                setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash );\n\n    }\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n\n  return (\n    <div class='mx-auto px-4 my-10 max-w-sm space-y-10 font-mono'>\n      <div class='text-5xl font-bold text-center'>Mint NFT</div>\n        <PrimaryButton onClick={onLogin} >{account + ' - ' + chain}</PrimaryButton>\n      <form class='space-y-4' onSubmit={onSubmit}>\n        <div>\n          <div>Title</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900'\n            type='text'\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder='Enter Title'\n          />\n        </div>\n\n        <div>\n          <div>Description</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder='Enter Description'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='sale'>Put on sale?</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={sale}\n            onChange={(e) => setSale(e.target.value)}\n            placeholder='Yes = 1, no = 0'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='price'>Price in Ξ</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={ethPrice}\n            onChange={(e) => setEthPrice(e.target.value)}\n            placeholder='Enter amount in Ξ'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='coins'>No. of Coins</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={coinPrice}\n            onChange={(e) => setCoinPrice(e.target.value)}\n            placeholder='Enter amount in coins'\n          />\n        </div>\n\n        <div>\n          <input type=\"file\" onChange={onFileChange} />\n        </div>\n\n        <div>\n            <img src={imageUrl} />\n        </div>\n\n        <div class='flex justify-center items-center space-x-2'>\n          <input\n            type='Checkbox'\n            checked={compliance}\n            onChange={(e) => setCompliance(e.target.checked)}\n          />\n          <span>I agree to XYZ.</span>\n        </div>\n\n        <div class='flex justify-center'>\n          <button class='py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md'>\n            Mint\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default MintNFT\n"]},"metadata":{},"sourceType":"module"}