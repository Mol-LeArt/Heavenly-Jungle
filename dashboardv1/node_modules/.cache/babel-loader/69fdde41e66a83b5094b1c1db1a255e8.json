{"ast":null,"code":"/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */\n\"use strict\";\n\nexports.__esModule = true;\nexports.find = exports.mergeProps = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * @component mergeProps\n * @description A helper function that merges default props and provided props\n *\n * @param reactInstanceProps properties passed into the component. Typically\n * `this.props`\n *\n * @param defaultProps default values for the react component\n *\n * @return a merged hash of props, giving precedence to the `reactInstanceProps`.\n * If `className` is defined by both sets of props, the resultant `className`\n * will be a combination of the two.\n * If `style` is defined by both, the resultant `style` hash will be a merge of\n * the two style hashes, with precedence given to `reactInstanceProps`'s style.\n *\n * @example ```js\n * import {mergeProps} from '../helpers';\n *\n * class Ribbon extends React.Component {\n *   render() {\n *     const {children, ...others} = this.props;\n *     const props = mergeProps(others, {className: 'ribbon', style: {height: '50px', color: 'blue'}, id: 'default-ribbon-id'});\n *     return <div {...props}>{children}</div>;\n *   }\n * }\n *\n * ReactDOM.render(<Ribbon className=\"my-ribbon\" style={{height: '25px'}} id=\"unique-ribbon-id\" />, myNode);\n * // Resultant props: {className: 'ribbon my-ribbon', style: {height: '25px', color: 'blue'}, id: 'unique-ribbon-id'}\n * ```\n */\n\n\nvar mergeProps = function mergeProps(reactInstanceProps, defaultProps) {\n  var className = reactInstanceProps.className,\n      id = reactInstanceProps.id,\n      style = reactInstanceProps.style,\n      remainingProps = _objectWithoutPropertiesLoose(reactInstanceProps, [\"className\", \"id\", \"style\"]);\n\n  var defaultClassName = defaultProps.className,\n      defaultId = defaultProps.id,\n      _defaultProps$style = defaultProps.style,\n      defaultStyle = _defaultProps$style === void 0 ? {} : _defaultProps$style,\n      remainingDefaultProps = _objectWithoutPropertiesLoose(defaultProps, [\"className\", \"id\", \"style\"]);\n\n  className = (0, _classnames[\"default\"])(defaultClassName, className);\n  style = _extends({}, defaultStyle, style);\n  id = id || defaultId;\n  remainingProps = _extends({}, remainingDefaultProps, remainingProps);\n  return _extends({\n    className: className,\n    id: id,\n    style: style\n  }, remainingProps);\n};\n\nexports.mergeProps = mergeProps;\n\nvar find = function find(arr, cb) {\n  for (var _i = 0; _i < arr.length; _i++) {\n    if (cb(arr[_i])) return arr[_i];\n  }\n};\n\nexports.find = find;","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/node_modules/pivotal-ui/react/helpers/helpers.js"],"names":["exports","__esModule","find","mergeProps","_classnames","_interopRequireDefault","require","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","reactInstanceProps","defaultProps","className","id","style","remainingProps","defaultClassName","defaultId","_defaultProps$style","defaultStyle","remainingDefaultProps","arr","cb","_i"],"mappings":"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","sourcesContent":["/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */\n\"use strict\";\n\nexports.__esModule = true;\nexports.find = exports.mergeProps = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @component mergeProps\n * @description A helper function that merges default props and provided props\n *\n * @param reactInstanceProps properties passed into the component. Typically\n * `this.props`\n *\n * @param defaultProps default values for the react component\n *\n * @return a merged hash of props, giving precedence to the `reactInstanceProps`.\n * If `className` is defined by both sets of props, the resultant `className`\n * will be a combination of the two.\n * If `style` is defined by both, the resultant `style` hash will be a merge of\n * the two style hashes, with precedence given to `reactInstanceProps`'s style.\n *\n * @example ```js\n * import {mergeProps} from '../helpers';\n *\n * class Ribbon extends React.Component {\n *   render() {\n *     const {children, ...others} = this.props;\n *     const props = mergeProps(others, {className: 'ribbon', style: {height: '50px', color: 'blue'}, id: 'default-ribbon-id'});\n *     return <div {...props}>{children}</div>;\n *   }\n * }\n *\n * ReactDOM.render(<Ribbon className=\"my-ribbon\" style={{height: '25px'}} id=\"unique-ribbon-id\" />, myNode);\n * // Resultant props: {className: 'ribbon my-ribbon', style: {height: '25px', color: 'blue'}, id: 'unique-ribbon-id'}\n * ```\n */\nvar mergeProps = function mergeProps(reactInstanceProps, defaultProps) {\n  var className = reactInstanceProps.className,\n      id = reactInstanceProps.id,\n      style = reactInstanceProps.style,\n      remainingProps = _objectWithoutPropertiesLoose(reactInstanceProps, [\"className\", \"id\", \"style\"]);\n\n  var defaultClassName = defaultProps.className,\n      defaultId = defaultProps.id,\n      _defaultProps$style = defaultProps.style,\n      defaultStyle = _defaultProps$style === void 0 ? {} : _defaultProps$style,\n      remainingDefaultProps = _objectWithoutPropertiesLoose(defaultProps, [\"className\", \"id\", \"style\"]);\n\n  className = (0, _classnames[\"default\"])(defaultClassName, className);\n  style = _extends({}, defaultStyle, style);\n  id = id || defaultId;\n  remainingProps = _extends({}, remainingDefaultProps, remainingProps);\n  return _extends({\n    className: className,\n    id: id,\n    style: style\n  }, remainingProps);\n};\n\nexports.mergeProps = mergeProps;\n\nvar find = function find(arr, cb) {\n  for (var _i = 0; _i < arr.length; _i++) {\n    if (cb(arr[_i])) return arr[_i];\n  }\n};\n\nexports.find = find;"]},"metadata":{},"sourceType":"script"}