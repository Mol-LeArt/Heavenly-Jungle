{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/dashboardV1/src/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = ({\n  getFileForUpload\n}) => {\n  _s();\n\n  // Image preview\n  const [img, setImg] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg'];\n\n  const changeHandler = e => {\n    let selected = e.target.files[0]; // check if a file is selected and is an accepted type\n\n    if (selected && types.includes(selected.type)) {\n      getFileForUpload(selected);\n      setError(null); // Preview Image if file type is accepted\n\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        reader.readyState === 2 && setImg(reader.result);\n      };\n\n      reader.readAsDataURL(selected);\n    } else {\n      getFileForUpload(null);\n      setError('Please select an image file (png or jpeg)');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }, this), img && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"preview img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageUpload, \"/OYI5PRWyBnWq/6KuSFf3AmKwSU=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/src/ImageUpload.js"],"names":["React","useState","ImageUpload","getFileForUpload","img","setImg","error","setError","types","changeHandler","e","selected","target","files","includes","type","reader","FileReader","onload","readyState","result","readAsDataURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AAC1C;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CADyB,CAGzB;;AACA,QAAIF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,EAA+C;AAC3CZ,MAAAA,gBAAgB,CAACQ,QAAD,CAAhB;AACAJ,MAAAA,QAAQ,CAAC,IAAD,CAAR,CAF2C,CAI3C;;AACA,YAAMS,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAK;AACjBF,QAAAA,MAAM,CAACG,UAAP,KAAsB,CAAtB,IAA2Bd,MAAM,CAACW,MAAM,CAACI,MAAR,CAAjC;AAEH,OAHD;;AAIAJ,MAAAA,MAAM,CAACK,aAAP,CAAqBV,QAArB;AACH,KAXD,MAWO;AACHR,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAI,MAAAA,QAAQ,CAAC,2CAAD,CAAR;AACH;AACJ,GAnBD;;AAqBA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,mBACMH,KAAK,iBAAI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADf,EAEMF,GAAG,iBAAI;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzCD;;GAAMF,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport './ImageUpload.css'\n\nconst ImageUpload = ({ getFileForUpload }) => {\n    // Image preview\n    const [img, setImg] = useState(null);\n    const [error, setError] = useState(null);\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        \n        // check if a file is selected and is an accepted type\n        if (selected && types.includes(selected.type)) {\n            getFileForUpload(selected);\n            setError(null);\n\n            // Preview Image if file type is accepted\n            const reader = new FileReader();\n            reader.onload = () =>{\n                reader.readyState === 2 && setImg(reader.result);\n                \n            }\n            reader.readAsDataURL(selected);\n        } else {\n            getFileForUpload(null);\n            setError('Please select an image file (png or jpeg)');\n        }\n    }\n\n    return (\n        <div>\n            <div class='space-y-4'>\n                <label>\n                    <input type=\"file\" onChange={changeHandler}/>\n                </label>\n                \n                <div>\n                    { error && <div className=\"error\">{ error }</div> }\n                    { img && <img src={img} alt=\"preview img\" />}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageUpload;\n\n"]},"metadata":{},"sourceType":"module"}