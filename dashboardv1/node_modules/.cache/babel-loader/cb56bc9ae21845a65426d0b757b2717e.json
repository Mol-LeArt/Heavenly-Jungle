{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/dashboardV1/src/expMinter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Mint from './Mint';\nimport ImageUpload from './ImageUpload';\nimport { GlobalContext } from './GlobalContext';\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  _s();\n\n  // ----- useState\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [sale, setSale] = useState('');\n  const [ethPrice, setEthPrice] = useState('');\n  const [coinPrice, setCoinPrice] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [compliance, setCompliance] = useState(false);\n  const [metadata, setMetadata] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState('');\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [connect, toggleConnect] = useState(false);\n  const [imageHash, setImageHash] = useState('');\n  const [imageUrl, setImageUrl] = useState('profile.jpg');\n  const provider = new ethers.providers.Web3Provider(window.ethereum); //window.addEventListener( 'load', async function() {  if (user) { await getNetwork(); setUser(user); setAccount(user.get(\"ethAddress\") ); } }) ;\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAccount(user.get(\"ethAddress\"));\n  }; //On file select (from the pop up)\n\n\n  const onFileChange = event => {\n    // Update the state\n    setImageFile(event.target.files[0]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance\n      };\n      setMetadata(nft);\n      doMint();\n    } else {\n      alert('You must accept!');\n    }\n  };\n\n  const doMint = async () => {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append(\"file\", imageFile, imageFile.name);\n    const res = await axios.post(url, data, {\n      maxContentLength: \"Infinity\",\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC,\n        pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE\n      }\n    });\n    console.log(res.data);\n    setImageHash(res.data.IpfsHash);\n    setImageUrl('https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash);\n\n    try {\n      uploadAndMint(res.data.IpfsHash);\n    } catch (e) {\n      console.log('error is - ' + e);\n    }\n  }; // ----- Upload tokenURI and Mint NFT\n\n\n  const uploadAndMint = async hash => {\n    alert('get commons ');\n    await getCommons();\n    alert('get commons ' + commonsAddress);\n    const baseUrl = 'https://ipfs.io/ipfs/'; // Add timestamp to metadata\n\n    const date = new Date();\n    const timestamp = date.getTime();\n    const dict = { ...metadata,\n      image: baseUrl + hash,\n      createdAt: timestamp\n    };\n    console.log('tokenURI at mint is - ', dict);\n    alert('tokenURI at mint is - ', dict);\n    /*  const data = JSON.stringify(dict)\n      const i = {\n        apiKey: process.env.REACT_APP_FLEEK_API_KEY,\n        apiSecret: process.env.REACT_APP_FLEEK_API_SECRET,\n        bucket: 'audsssy-team-bucket',\n        key: hash,\n        data,\n      }\n    */\n\n    try {\n      // Uplaod tokenUri to Fleek\n      //    const result = await fleek.upload(i)\n      //    console.log('this is tokenUri hash from fleek - ' + result.hash)\n      // Mint NFT\n      const tokenUri = baseUrl + hash;\n      console.log(tokenUri);\n      const p = ethers.utils.parseEther(ethPrice);\n      const c = ethers.utils.parseEther(coinPrice);\n      molCommons(p, c, tokenUri);\n    } catch (e) {\n      console.log('error is - ' + e);\n    }\n  };\n\n  const getCommons = async () => {\n    var commonsId = window.location.search.substring(11);\n    const query = new moralis.Query(Commons);\n    query.equalTo(\"objectId\", commonsId);\n    const results = await query.find();\n    var commonsObject;\n\n    for (let i = 0; i < results.length; i++) // wtf??? only expecting one result. gotta find acceptable solution for this\n    {\n      const object = results[i];\n      commonsObject = object;\n      setCommonsAddress(object.get('contractaddress'));\n      alert('commons ' + object.get('contractaddress'));\n    }\n  };\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mx-auto px-4 my-10 max-w-sm space-y-10 font-mono\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-5xl font-bold text-center\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: onLogin,\n      children: account + ' - ' + chain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"space-y-4\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Put on sale?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: sale,\n          onChange: e => setSale(e.target.value),\n          placeholder: \"Yes = 1, no = 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: ethPrice,\n          onChange: e => setEthPrice(e.target.value),\n          placeholder: \"Enter amount in \\u039E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coins\",\n          children: \"No. of Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm\",\n          type: \"text\",\n          value: coinPrice,\n          onChange: e => setCoinPrice(e.target.value),\n          placeholder: \"Enter amount in coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Checkbox\",\n          checked: compliance,\n          onChange: e => setCompliance(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"I agree to XYZ.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md\",\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintNFT, \"v/7SZhIg1MXObKxoHu2EUwAdvFU=\");\n\n_c = MintNFT;\nexport default MintNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintNFT\");","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/src/expMinter.js"],"names":["React","useState","useContext","Mint","ImageUpload","GlobalContext","DefaultButton","PrimaryButton","DangerButton","BrandButton","moralis","ethers","axios","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","MintNFT","title","setTitle","description","setDescription","sale","setSale","ethPrice","setEthPrice","coinPrice","setCoinPrice","imageFile","setImageFile","compliance","setCompliance","metadata","setMetadata","account","setAccount","chain","setChain","initialUser","User","current","user","setUser","connect","toggleConnect","imageHash","setImageHash","imageUrl","setImageUrl","provider","providers","Web3Provider","window","ethereum","onLogin","getNetwork","authenticate","get","onFileChange","event","target","files","onSubmit","e","preventDefault","nft","doMint","alert","url","data","FormData","append","name","res","post","maxContentLength","headers","_boundary","pinata_api_key","REACT_APP_PINATA_PUBLIC","pinata_secret_api_key","REACT_APP_PINATA_PRIVATE","console","log","IpfsHash","uploadAndMint","hash","getCommons","commonsAddress","baseUrl","date","Date","timestamp","getTime","dict","image","createdAt","tokenUri","p","utils","parseEther","c","molCommons","commonsId","location","search","substring","query","Query","Commons","equalTo","results","find","commonsObject","i","length","object","setCommonsAddress","then","network","chainId","catch","err","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Mint from './Mint'\nimport ImageUpload from './ImageUpload'\nimport { GlobalContext } from './GlobalContext'\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport moralis from \"moralis\";\nimport { ethers } from 'ethers'\nimport axios from 'axios';\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst MintNFT = () => {\n  // ----- useState\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [sale, setSale] = useState('')\n  const [ethPrice, setEthPrice] = useState('')\n  const [coinPrice, setCoinPrice] = useState('')\n  const [imageFile, setImageFile] = useState(null)\n  const [compliance, setCompliance] = useState(false)\n  const [metadata, setMetadata] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [chain, setChain] = useState('')\n  const initialUser = moralis.User.current()\n  const [user, setUser] = useState(initialUser)\n  const [connect, toggleConnect] = useState(false)\n  const [imageHash, setImageHash] = useState('');\n  const [imageUrl, setImageUrl] = useState('profile.jpg');\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\n //window.addEventListener( 'load', async function() {  if (user) { await getNetwork(); setUser(user); setAccount(user.get(\"ethAddress\") ); } }) ;\n\n  const onLogin = async () => { await getNetwork(); const user = await moralis.authenticate(); setUser(user); setAccount(user.get(\"ethAddress\") ); };\n\n\n\n//On file select (from the pop up)\n\tconst onFileChange = event => {\n\t\t// Update the state\n\t    setImageFile(event.target.files[0]);\n\t};\n\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (compliance) {\n      const nft = {\n        account: account,\n        title: title,\n        description: description,\n        compliance: compliance,\n      }\n      setMetadata(nft);\n      doMint();\n    } else {\n      alert('You must accept!')\n    }\n  }\n\n    const doMint = async () => {\n                                const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n                                let   data = new FormData();\n                                data.append(\"file\", imageFile, imageFile.name );\n                                const res = await axios.post(   url, data, {  maxContentLength: \"Infinity\", \n                                                                headers: { \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n                                                                pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC,\n                                                                pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE,            },   });\n                                console.log(res.data);\n                                setImageHash( res.data.IpfsHash );\n                                setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash );\n\n\n                                try\n                                {           \n                                        uploadAndMint(res.data.IpfsHash)\n                                    } \n                                    catch (e) \n                                   { \n                                        console.log('error is - ' + e) \n                                   }\n  \n\n\n    }\n\n  // ----- Upload tokenURI and Mint NFT\n  const uploadAndMint = async (hash) => {\n                                                alert( 'get commons ' );\n                                                await getCommons();\n                                                alert( 'get commons ' + commonsAddress );\n                                                const baseUrl = 'https://ipfs.io/ipfs/'\n\n    // Add timestamp to metadata\n    const date = new Date()\n    const timestamp = date.getTime()\n    const dict = { ...metadata, image: baseUrl + hash, createdAt: timestamp }\n    console.log('tokenURI at mint is - ', dict)\n    alert('tokenURI at mint is - ', dict)\n\n  /*  const data = JSON.stringify(dict)\n    const i = {\n      apiKey: process.env.REACT_APP_FLEEK_API_KEY,\n      apiSecret: process.env.REACT_APP_FLEEK_API_SECRET,\n      bucket: 'audsssy-team-bucket',\n      key: hash,\n      data,\n    }\n*/\n    try {\n      // Uplaod tokenUri to Fleek\n  //    const result = await fleek.upload(i)\n  //    console.log('this is tokenUri hash from fleek - ' + result.hash)\n\n      // Mint NFT\n      const tokenUri = baseUrl + hash\n      console.log(tokenUri)\n      const p = ethers.utils.parseEther(ethPrice)\n      const c = ethers.utils.parseEther(coinPrice)\n      molCommons(p, c, tokenUri)\n  \n    } catch (e) {\n      console.log('error is - ' + e )\n    }\n  }\n\n  const getCommons = async () =>\n                                        {\n                                            var commonsId =    window.location.search.substring( 11 );\n                                            const query = new moralis.Query( Commons );\n                                            query.equalTo( \"objectId\", commonsId );\n                                            const results = await query.find();\n                                            var commonsObject;\n                                            for ( let i = 0; i < results.length; i++ ) // wtf??? only expecting one result. gotta find acceptable solution for this\n                                            { \n                                                const object = results[i];\n                                                commonsObject = object;\n                                                setCommonsAddress( object.get('contractaddress') );\n                                                alert( 'commons '  + object.get('contractaddress') );\n                                            }\n                                        }\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n\n  return (\n    <div class='mx-auto px-4 my-10 max-w-sm space-y-10 font-mono'>\n      <div class='text-5xl font-bold text-center'>Mint NFT</div>\n        <PrimaryButton onClick={onLogin} >{account + ' - ' + chain}</PrimaryButton>\n      <form class='space-y-4' onSubmit={onSubmit}>\n        <div>\n          <div>Title</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900'\n            type='text'\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder='Enter Title'\n          />\n        </div>\n\n        <div>\n          <div>Description</div>\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder='Enter Description'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='sale'>Put on sale?</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={sale}\n            onChange={(e) => setSale(e.target.value)}\n            placeholder='Yes = 1, no = 0'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='price'>Price in Ξ</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={ethPrice}\n            onChange={(e) => setEthPrice(e.target.value)}\n            placeholder='Enter amount in Ξ'\n          />\n        </div>\n\n        <div>\n          <label htmlFor='coins'>No. of Coins</label>\n          <br />\n          <input\n            class='border border-gray-400 py-2 px-4 w-full rounded focus:outline-none focus:border-gray-900 max-w-sm'\n            type='text'\n            value={coinPrice}\n            onChange={(e) => setCoinPrice(e.target.value)}\n            placeholder='Enter amount in coins'\n          />\n        </div>\n\n        <div>\n          <input type=\"file\" onChange={onFileChange} />\n        </div>\n\n        <div>\n            <img src={imageUrl} />\n        </div>\n\n        <div class='flex justify-center items-center space-x-2'>\n          <input\n            type='Checkbox'\n            checked={compliance}\n            onChange={(e) => setCompliance(e.target.checked)}\n          />\n          <span>I agree to XYZ.</span>\n        </div>\n\n        <div class='flex justify-center'>\n          <button class='py-2 px-4 text-white bg-gray-800 hover:bg-gray-500 w-max rounded-md'>\n            Mint\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default MintNFT\n"]},"metadata":{},"sourceType":"module"}