{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/moralis-react-app/src/puiViewCommons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport { Grid, FlexCol } from 'pivotal-ui/react/flex-grids';\nimport { Panel } from 'pivotal-ui/react/panels';\nimport { Divider } from 'pivotal-ui/react/dividers';\nimport { Image } from 'pivotal-ui/react/images';\nimport { Input } from 'pivotal-ui/react/inputs';\nimport { Modal } from 'pivotal-ui/react/modal';\nimport { Checkbox } from 'pivotal-ui/react/checkbox';\nimport { Radio, RadioGroup } from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\nconst orgaddresses = [];\n\nfunction App() {\n  _s();\n\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [clist, setList] = useState('');\n  const [orgList, setOrgList] = useState('');\n  const [address, setAddress] = useState('Connect Wallet');\n  const [chain, setChain] = useState('');\n  const [connect, toggleConnect] = useState(false);\n  window.addEventListener('load', async function () {\n    if (user) {\n      await getNetwork();\n      setUser(user);\n      setAddress(user.get(\"ethAddress\"));\n      getCommons();\n    }\n  });\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAddress(user.get(\"ethAddress\"));\n  };\n\n  const onLogout = () => {\n    moralis.User.logOut();\n    setUser(null);\n  };\n\n  const Organizer = moralis.Object.extend(\"Organizer\", {// Instance methods\n  }, {\n    newOrganizer: function (index) {\n      const organizer = new Organizer();\n      alert('org ' + document.getElementById('organizer' + index).value);\n      organizer.set(\"address\", document.getElementById('organizer' + index).value);\n      return organizer;\n    }\n  });\n  const Commons = moralis.Object.extend(\"Commons\", {// Instance methods\n  }, {\n    newCommons: function () {\n      const commons = new Commons();\n      commons.set(\"name\", document.getElementById('commonsname').value);\n      commons.set(\"vaultsymbol\", document.getElementById('vaultsymbol').value);\n      commons.set(\"organizer\", document.getElementById('organizer0').value);\n      commons.set(\"vaultname\", document.getElementById('vaultname').value);\n      commons.set(\"confirmations\", document.getElementById('confirmations').value);\n      alert('tfer ' + document.getElementById('transferrable').checked + '');\n      commons.set(\"transferrable\", document.getElementById('transferrable').checked + '');\n      var radios = document.getElementsByName('radio-group');\n\n      for (var i = 0; i < radios.length; i++) {\n        if (radios[i].checked) {\n          commons.set(\"use\", radios[i].value); //        alert( 'elements ' + i + ' ' + radios[i].checked );\n        }\n      }\n\n      return commons;\n    }\n  });\n\n  const getCommons = async () => {\n    var commonsId = window.location.search.substring(11); //  alert( commonsId );\n\n    const query = new moralis.Query(Commons);\n    query.equalTo(\"objectId\", commonsId);\n    const results = await query.find();\n\n    for (let i = 0; i < results.length; i++) {\n      const object = results[i];\n\n      const listItems = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: object.get('name') + ' - ' + object.get('vaultname')\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 35\n      }, this);\n\n      setList(listItems);\n    }\n\n    const queryOrgs = new moralis.Query(Organizer);\n    query.equalTo(\"parent\", commonsId);\n    const orgResults = await query.find();\n\n    for (let i = 0; i < orgResults.length; i++) {\n      const object = orgResults[i];\n\n      const listItems = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: object.get('address')\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 35\n      }, this);\n\n      setOrgList(listItems);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      title: 'Overview',\n      titleCols: [/*#__PURE__*/_jsxDEV(FlexCol, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: onLogin,\n          children: address + ' - ' + chain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 68\n      }, this)],\n      style: {\n        padding: '8px',\n        background: '#f2f2f2'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: clist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: orgList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 21\n  }, this);\n}\n\n_s(App, \"USGY5Q1NZMIDtcOZtuf/apT/xVY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielo/Development/ui/moralis-react-app/src/puiViewCommons.js"],"names":["React","useState","ReactDOM","DefaultButton","PrimaryButton","DangerButton","BrandButton","Grid","FlexCol","Panel","Divider","Image","Input","Modal","Checkbox","Radio","RadioGroup","ethers","moralis","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","orgaddresses","App","initialUser","User","current","user","setUser","clist","setList","orgList","setOrgList","address","setAddress","chain","setChain","connect","toggleConnect","window","addEventListener","getNetwork","get","getCommons","provider","providers","Web3Provider","ethereum","then","network","console","log","chainId","catch","err","alert","onLogin","authenticate","onLogout","logOut","Organizer","Object","extend","newOrganizer","index","organizer","document","getElementById","value","set","Commons","newCommons","commons","checked","radios","getElementsByName","i","length","commonsId","location","search","substring","query","Query","equalTo","results","find","object","listItems","queryOrgs","orgResults","title","titleCols","style","padding","background","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [orgList, setOrgList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n\n        window.addEventListener( 'load', async function() { if (user) { await getNetwork(); setUser(user); setAddress(user.get(\"ethAddress\") ); getCommons(); } }) ;\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                   };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n        const Organizer = moralis.Object.extend( \"Organizer\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newOrganizer: function(index) { \n                                        const organizer = new Organizer();\n                                        alert( 'org ' + document.getElementById( 'organizer' + index ).value );\n                                        organizer.set( \"address\",        document.getElementById( 'organizer' + index ).value  );\n                                        return organizer; \n                                    }\n        });\n\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newCommons: function() { \n                                        const commons = new Commons();\n                                        commons.set( \"name\",            document.getElementById( 'commonsname'     ).value  );\n                                        commons.set( \"vaultsymbol\",     document.getElementById( 'vaultsymbol'     ).value  );\n                                        commons.set( \"organizer\",       document.getElementById( 'organizer0'       ).value  ); \n                                        commons.set( \"vaultname\",       document.getElementById( 'vaultname'       ).value  ); \n                                        commons.set( \"confirmations\",   document.getElementById( 'confirmations'   ).value  );\n                                        alert( 'tfer ' + document.getElementById( 'transferrable'   ).checked + '' );\n                                        commons.set( \"transferrable\",   document.getElementById( 'transferrable'   ).checked + '' );\n                                       \n                                        var radios = document.getElementsByName( 'radio-group'   );                                 \n                                        for (var i = 0; i < radios.length; i++) \n                                        {\n                                            if ( radios[i].checked )\n                                            {\n                                               commons.set( \"use\",     radios[i].value  );\n                                       //        alert( 'elements ' + i + ' ' + radios[i].checked );\n                                            }\n                                        }\n                                        return commons; \n                                    }\n        });\n\n        const getCommons = async () =>\n        {\n            var commonsId =    window.location.search.substring( 11 );\n          //  alert( commonsId );\n            const query = new moralis.Query( Commons );\n            query.equalTo( \"objectId\", commonsId );\n            const results = await query.find();\n            for ( let i = 0; i < results.length; i++ ) \n            { \n                const object = results[i];\n                const listItems = <li key={i}>{object.get('name') + ' - ' +object.get('vaultname')}</li>;\n                setList(listItems);\n            }\n            const queryOrgs = new moralis.Query( Organizer );\n            query.equalTo( \"parent\", commonsId );\n            const orgResults = await query.find();\n            for ( let i = 0; i < orgResults.length; i++ ) \n            { \n                const object = orgResults[i];\n                const listItems = <li key={i}>{object.get('address')}</li>;\n                setOrgList(listItems);\n            }\n        }\n\n        return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} >{clist}</FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} >{orgList}</FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n\n\n                      </Panel>\n                    </div>\n               );\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}