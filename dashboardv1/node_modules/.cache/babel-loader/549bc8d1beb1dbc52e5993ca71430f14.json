{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/moralis-react-app/src/puiUserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport { Grid, FlexCol } from 'pivotal-ui/react/flex-grids';\nimport { Panel } from 'pivotal-ui/react/panels';\nimport { Divider } from 'pivotal-ui/react/dividers';\nimport { Image } from 'pivotal-ui/react/images';\nimport { Input } from 'pivotal-ui/react/inputs';\nimport { Modal } from 'pivotal-ui/react/modal';\nimport { Checkbox } from 'pivotal-ui/react/checkbox';\nimport { Radio, RadioGroup } from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\nconst orgaddresses = [];\n\nfunction App() {\n  _s();\n\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [clist, setList] = useState('');\n  const [address, setAddress] = useState('Connect Wallet');\n  const [chain, setChain] = useState('');\n  const [connect, toggleConnect] = useState(false);\n  const [twitter, setTwitter] = useState('Twitter');\n  const [instagram, setInstagram] = useState('Instagram');\n  const Avatar = moralis.Object.extend(\"Avatar\", {// Instance methods\n  }, {\n    newAvatar: function () {\n      const avatar = new Avatar(); //                   commons.set( \"name\",        document.getElementById( 'commonsname' ).value  );\n      //                 commons.set( \"vaultsymbol\", document.getElementById( 'vaultsymbol' ).value  );\n      //               commons.set( \"organizer\",   document.getElementById( 'organizer'   ).value  ); \n      //             commons.set( \"vaultname\",   document.getElementById( 'vaultname'   ).value  ); \n\n      return avatar;\n    }\n  });\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  window.addEventListener('load', async function () {\n    if (user) {\n      await getNetwork();\n      setUser(user);\n      setAddress(user.get(\"ethAddress\"));\n    }\n  }); // On file upload (click the upload button)\n\n  onFileUpload = async () => {\n    const pinataApiKey = \"769a94ec02018d9d3e92\";\n    const pinataSecretApiKey = \"f1424ea5ce2fa199efa260ca2cae4c245227a750e919722ffdf5688b81638051\";\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\n    const res = await axios.post(url, data, {\n      maxContentLength: \"Infinity\",\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey\n      }\n    });\n    console.log(res.data);\n    alert(res.data);\n    this.setState({\n      imageHash: res.data.IpfsHash\n    });\n    this.setState({\n      imageMetaData: '{\"name\":\"' + this.state.selectedFile.name + '\",\"hash\":\"' + res.data.IpfsHash + '\",\"description\":\"todo\"}'\n    }); //{ \"name\":\"My Kid's Art\", \"hash\": \"QmfAvnM89JrqvdhLymbU5sXoAukEJygSLk9cJMBPTyrmxo\",  \"by\": \"Justin Huner\" }\n  };\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAddress(user.get(\"ethAddress\"));\n  };\n\n  const onLogout = () => {\n    moralis.User.logOut();\n    setUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      title: 'Overview',\n      titleCols: [/*#__PURE__*/_jsxDEV(FlexCol, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: onLogin,\n          children: address + ' - ' + chain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 68\n      }, this)],\n      style: {\n        padding: '8px',\n        background: '#f2f2f2'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: twitter,\n            id: \"twitter\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: instagram,\n            id: \"instagram\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 21\n  }, this);\n}\n\n_s(App, \"oVriBIaqn/mHrpQfB8lRB54hrts=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielo/Development/ui/moralis-react-app/src/puiUserProfile.js"],"names":["React","useState","ReactDOM","DefaultButton","PrimaryButton","DangerButton","BrandButton","Grid","FlexCol","Panel","Divider","Image","Input","Modal","Checkbox","Radio","RadioGroup","ethers","axios","moralis","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","orgaddresses","App","initialUser","User","current","user","setUser","clist","setList","address","setAddress","chain","setChain","connect","toggleConnect","twitter","setTwitter","instagram","setInstagram","Avatar","Object","extend","newAvatar","avatar","provider","providers","Web3Provider","window","ethereum","addEventListener","getNetwork","get","onFileUpload","pinataApiKey","pinataSecretApiKey","url","data","FormData","append","state","selectedFile","name","res","post","maxContentLength","headers","_boundary","pinata_api_key","pinata_secret_api_key","console","log","alert","setState","imageHash","IpfsHash","imageMetaData","then","network","chainId","catch","err","onLogin","authenticate","onLogout","logOut","title","titleCols","style","padding","background","width","onFileChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\nimport axios from 'axios';\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [twitter, setTwitter] = useState( 'Twitter' );\n        const [instagram, setInstagram] = useState( 'Instagram' );\n\n        const Avatar = moralis.Object.extend( \"Avatar\", \n        {\n          // Instance methods\n        }, \n        {  \n            newAvatar: function() { \n                                        const avatar = new Avatar();\n                     //                   commons.set( \"name\",        document.getElementById( 'commonsname' ).value  );\n                       //                 commons.set( \"vaultsymbol\", document.getElementById( 'vaultsymbol' ).value  );\n                         //               commons.set( \"organizer\",   document.getElementById( 'organizer'   ).value  ); \n                           //             commons.set( \"vaultname\",   document.getElementById( 'vaultname'   ).value  ); \n                                        return avatar; \n                                    }\n        });\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      window.addEventListener( 'load', async function() {    \n                                                       if (user) \n                                                       {\n                                                            await getNetwork();\n                                                            setUser(user);\n                                                            setAddress(user.get(\"ethAddress\") ); \n                                                       }\n\n                                                  }) ;\n\n\n// On file upload (click the upload button)\n\tonFileUpload = async () => {\n\n    const pinataApiKey = \"769a94ec02018d9d3e92\";\n    const pinataSecretApiKey = \"f1424ea5ce2fa199efa260ca2cae4c245227a750e919722ffdf5688b81638051\";\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append(\"file\", this.state.selectedFile, this.state.selectedFile.name );\n    const res = await axios.post(url, data, {\n    maxContentLength: \"Infinity\", \n    headers: {\n      \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n      pinata_api_key: pinataApiKey, \n      pinata_secret_api_key: pinataSecretApiKey,\n    },\n});\n    console.log(res.data);\n    alert( res.data );\n    this.setState({ imageHash : res.data.IpfsHash });\n    this.setState({ imageMetaData : '{\"name\":\"' + this.state.selectedFile.name + '\",\"hash\":\"' + res.data.IpfsHash + '\",\"description\":\"todo\"}'});\n//{ \"name\":\"My Kid's Art\", \"hash\": \"QmfAvnM89JrqvdhLymbU5sXoAukEJygSLk9cJMBPTyrmxo\",  \"by\": \"Justin Huner\" }\n\t};\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                    };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n\n       return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={twitter} id=\"twitter\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                       <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={instagram} id=\"instagram\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><input type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t                                                    <button onClick={this.onFileUpload}>Upload!</button></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                      </Panel>\n                    </div>\n               );\n\n\n\n\n\n\n   \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}