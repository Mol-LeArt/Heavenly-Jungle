{"ast":null,"code":"var _jsxFileName = \"/home/danielo/Development/ui/dashboardV1/src/puiUserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DefaultButton, PrimaryButton, DangerButton, BrandButton } from 'pivotal-ui/react/buttons';\nimport { Grid, FlexCol } from 'pivotal-ui/react/flex-grids';\nimport { Panel } from 'pivotal-ui/react/panels';\nimport { Divider } from 'pivotal-ui/react/dividers';\nimport { Image } from 'pivotal-ui/react/images';\nimport { Input } from 'pivotal-ui/react/inputs';\nimport { Modal } from 'pivotal-ui/react/modal';\nimport { Checkbox } from 'pivotal-ui/react/checkbox';\nimport { Radio, RadioGroup } from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\nconst orgaddresses = [];\n\nfunction App() {\n  _s();\n\n  const [selectedFile, setFile] = useState('');\n  const [selectedFileName, setFileName] = useState('');\n  const [imageHash, setImageHash] = useState('');\n  const [imageUrl, setImageUrl] = useState('profile.jpg');\n  const initialUser = moralis.User.current();\n  const [user, setUser] = useState(initialUser);\n  const [name, setName] = useState('');\n  const [clist, setList] = useState('');\n  const [address, setAddress] = useState('Connect Wallet');\n  const [chain, setChain] = useState('');\n  const [connect, toggleConnect] = useState(false);\n  const [twitter, setTwitter] = useState('Twitter');\n  const [instagram, setInstagram] = useState('Instagram');\n  const Avatar = moralis.Object.extend(\"Avatar\", {// Instance methods\n  }, {\n    newAvatar: function (imageHash, address) {\n      const avatar = new Avatar();\n      avatar.set(\"image\", imageHash);\n      avatar.set(\"owneraddress\", address.toLowerCase());\n      return avatar;\n    }\n  });\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  window.addEventListener('load', async function () {\n    if (user) {\n      await getNetwork();\n      setUser(user);\n      setAddress(user.get(\"ethAddress\"));\n\n      if (user.get(\"twitter\") != '') {\n        setTwitter(user.get(\"twitter\"));\n      }\n\n      if (user.get(\"instagram\") != '') {\n        setInstagram(user.get(\"instagram\"));\n      }\n\n      if (user.get(\"name\") != '') {\n        setName(user.get(\"name\"));\n      }\n\n      const queryAvatar = new moralis.Query(Avatar);\n      queryAvatar.equalTo(\"owneraddress\", user.get(\"ethAddress\"));\n      const avatarResults = await queryAvatar.find();\n\n      for (let i = 0; i < avatarResults.length; i++) {\n        setImageUrl('https://gateway.pinata.cloud/ipfs/' + avatarResults[i].get(\"image\"));\n      }\n    }\n  }); // On file upload (click the upload button)\n\n  const onFileUpload = async () => {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append(\"file\", selectedFile, selectedFile.name);\n    const res = await axios.post(url, data, {\n      maxContentLength: \"Infinity\",\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC,\n        pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE\n      }\n    });\n    console.log(res.data);\n    setImageHash(res.data.IpfsHash);\n    setImageUrl('https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash);\n    const avatar = Avatar.newAvatar(res.data.IpfsHash, user.get(\"ethAddress\"));\n    await avatar.save();\n  }; // On file select (from the pop up)\n\n\n  const onFileChange = event => {\n    // Update the state\n    setFile(event.target.files[0]);\n  };\n\n  const getNetwork = () => {\n    provider.getNetwork().then(network => {\n      console.log('current chainId - ' + network.chainId);\n\n      if (network.chainId === 100) {\n        setChain('xDAI');\n        toggleConnect(true);\n      } else if (network.chainId === 4) {\n        setChain('Rinkeby');\n        toggleConnect(true);\n      } else if (network.chainId === 1) {\n        setChain('Mainnet');\n        toggleConnect(true);\n      } else if (network.chainId === 3) {\n        setChain('Ropsten');\n        toggleConnect(true);\n      } else if (network.chainId === 42) {\n        setChain('Kovan');\n        toggleConnect(true);\n      } else {\n        console.log('Pick a supported blockchain!');\n      }\n    }).catch(err => {\n      alert('err ' + err);\n      console.log(err);\n    });\n  };\n\n  const onLogin = async () => {\n    await getNetwork();\n    const user = await moralis.authenticate();\n    setUser(user);\n    setAddress(user.get(\"ethAddress\"));\n  };\n\n  const onLogout = () => {\n    moralis.User.logOut();\n    setUser(null);\n  };\n\n  const save = async () => {\n    if (document.getElementById('twitter').value != '') {\n      user.set(\"twitter\", document.getElementById('twitter').value);\n    }\n\n    if (document.getElementById('instagram').value != '') {\n      user.set(\"instagram\", document.getElementById('instagram').value);\n    }\n\n    await user.save();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      title: 'Overview',\n      titleCols: [/*#__PURE__*/_jsxDEV(FlexCol, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: onLogin,\n          children: address + ' - ' + chain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 68\n      }, this)],\n      style: {\n        padding: '8px',\n        background: '#f2f2f2'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: name,\n            id: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: twitter,\n            id: \"twitter\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: instagram,\n            id: \"instagram\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\",\n          children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            onClick: save,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"grid-show show-outline\",\n        children: [/*#__PURE__*/_jsxDEV(FlexCol, {\n          fixed: true,\n          style: {\n            width: '35%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          style: {\n            padding: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FlexCol, {\n          className: \"col-grow-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"avatarimage\",\n            src: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 21\n  }, this);\n}\n\n_s(App, \"LP4KoqKj327HPpMwhp198YhwMe8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielo/Development/ui/dashboardV1/src/puiUserProfile.js"],"names":["React","useState","ReactDOM","DefaultButton","PrimaryButton","DangerButton","BrandButton","Grid","FlexCol","Panel","Divider","Image","Input","Modal","Checkbox","Radio","RadioGroup","ethers","axios","moralis","initialize","process","env","REACT_APP_MORALIS_APPLICATION_ID","serverURL","REACT_APP_MORALIS_SERVER_URL","orgaddresses","App","selectedFile","setFile","selectedFileName","setFileName","imageHash","setImageHash","imageUrl","setImageUrl","initialUser","User","current","user","setUser","name","setName","clist","setList","address","setAddress","chain","setChain","connect","toggleConnect","twitter","setTwitter","instagram","setInstagram","Avatar","Object","extend","newAvatar","avatar","set","toLowerCase","provider","providers","Web3Provider","window","ethereum","addEventListener","getNetwork","get","queryAvatar","Query","equalTo","avatarResults","find","i","length","onFileUpload","url","data","FormData","append","res","post","maxContentLength","headers","_boundary","pinata_api_key","REACT_APP_PINATA_PUBLIC","pinata_secret_api_key","REACT_APP_PINATA_PRIVATE","console","log","IpfsHash","save","onFileChange","event","target","files","then","network","chainId","catch","err","alert","onLogin","authenticate","onLogout","logOut","document","getElementById","value","title","titleCols","style","padding","background","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\nimport axios from 'axios';\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\n\n\nconst orgaddresses = [];\nfunction App() {\n\n        const [selectedFile, setFile] = useState('');\n        const [selectedFileName, setFileName] = useState('');\n        const [imageHash, setImageHash] = useState('');\n        const [imageUrl, setImageUrl] = useState('profile.jpg');\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [name, setName] = useState('');\n        const [clist, setList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [twitter, setTwitter] = useState( 'Twitter' );\n        const [instagram, setInstagram] = useState( 'Instagram' );\n\n        const Avatar = moralis.Object.extend( \"Avatar\", \n        {\n          // Instance methods\n        }, \n        {  \n            newAvatar: function(imageHash,address) { \n                                        const avatar = new Avatar();\n                                        avatar.set( \"image\",        imageHash  );\n                                        avatar.set( \"owneraddress\",      address.toLowerCase()    );\n                                        return avatar; \n                                    }\n        });\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      window.addEventListener( 'load', async function() {    \n                                                       if (user) \n                                                       {\n                                                            await getNetwork();\n                                                            setUser(user);\n                                                            setAddress(user.get(\"ethAddress\") );\n                                                            if ( user.get(\"twitter\") != '' )\n                                                            {\n                                                               setTwitter(user.get(\"twitter\") ); \n                                                            }\n                                                            if ( user.get(\"instagram\") != '' )\n                                                            {\n                                                                setInstagram(user.get(\"instagram\") ); \n                                                            }\n                                                            if ( user.get(\"name\") != '' )\n                                                            {\n                                                                setName(user.get(\"name\") ); \n                                                            }\n                                                            const queryAvatar = new moralis.Query( Avatar );\n                                                            queryAvatar.equalTo( \"owneraddress\", user.get(\"ethAddress\") );\n                                                            const avatarResults = await queryAvatar.find();\n\n                                                            for ( let i = 0; i < avatarResults.length; i++ ) \n                                                            { \n                                                                setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + avatarResults[i].get(\"image\") );    \n                                                            }        \n                                                       }\n\n                                                  }) ;\n\n\n// On file upload (click the upload button)\n\tconst onFileUpload = async () => {\n\n            const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n            let data = new FormData();\n            data.append(\"file\", selectedFile, selectedFile.name );\n            const res = await axios.post(url, data, {\n            maxContentLength: \"Infinity\", \n            headers: {\n              \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n              pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC, \n              pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE,\n            },\n        });\n            console.log(res.data);\n            setImageHash( res.data.IpfsHash );\n            setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash );\n            \n            const avatar = Avatar.newAvatar( res.data.IpfsHash, user.get( \"ethAddress\" ) );\n            await avatar.save();  \n\t};\n\n// On file select (from the pop up)\n\tconst onFileChange = event => {\n\t\t// Update the state\n\t    setFile(event.target.files[0]);\n\t};\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                    };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n       const save = async () => {  \n                                    if ( document.getElementById( 'twitter' ).value != '' )\n                                    {\n                                        user.set( \"twitter\", document.getElementById( 'twitter' ).value );\n                                    }\n                                    if ( document.getElementById( 'instagram' ).value != '' )\n                                    {\n                                        user.set( \"instagram\", document.getElementById( 'instagram' ).value ); \n                                    }\n                                    await user.save(); \n\n                                };\n\n\n       return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={name} id=\"name\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={twitter} id=\"twitter\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                       <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={instagram} id=\"instagram\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"><PrimaryButton onClick={save} >Save</PrimaryButton></FlexCol>\n                        </Grid>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><input type=\"file\" onChange={onFileChange} />\n\t\t\t\t                                                    <button onClick={onFileUpload}>Upload!</button></FlexCol>\n                          <FlexCol className=\"col-grow-2\"><img className=\"avatarimage\" src={imageUrl} /></FlexCol>\n                        </Grid>\n                      </Panel>\n                    </div>\n               );\n\n\n\n\n\n\n   \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}