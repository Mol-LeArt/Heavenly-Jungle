[{"/home/danielo/Development/ui/dashboardV1/src/index.js":"1","/home/danielo/Development/ui/dashboardV1/src/puiSelectCommons.js":"2","/home/danielo/Development/ui/dashboardV1/src/puiUserProfile.js":"3","/home/danielo/Development/ui/dashboardV1/src/BrowserApp.js":"4","/home/danielo/Development/ui/dashboardV1/src/puiViewCommons.js":"5","/home/danielo/Development/ui/dashboardV1/src/timelines/index.js":"6","/home/danielo/Development/ui/dashboardV1/src/puiAboutCommons.js":"7","/home/danielo/Development/ui/dashboardV1/src/puiNFTView.js":"8","/home/danielo/Development/ui/dashboardV1/src/puiDeploy-updated.js":"9","/home/danielo/Development/ui/dashboardV1/src/MOLCOMMONS_ABI.js":"10","/home/danielo/Development/ui/dashboardV1/src/MOLCOMMONS_BYTECODE.js":"11","/home/danielo/Development/ui/dashboardV1/src/expMinter.js":"12","/home/danielo/Development/ui/dashboardV1/src/GlobalContext.js":"13","/home/danielo/Development/ui/dashboardV1/src/ImageUpload.js":"14","/home/danielo/Development/ui/dashboardV1/src/Mint.js":"15"},{"size":3794,"mtime":1618657538438,"results":"16","hashOfConfig":"17"},{"size":6419,"mtime":1618218091411,"results":"18","hashOfConfig":"17"},{"size":9928,"mtime":1618220679571,"results":"19","hashOfConfig":"17"},{"size":1477,"mtime":1618803372614,"results":"20","hashOfConfig":"17"},{"size":15591,"mtime":1618810288811,"results":"21","hashOfConfig":"17"},{"size":1467,"mtime":1616211257537,"results":"22","hashOfConfig":"17"},{"size":12850,"mtime":1618220425171,"results":"23","hashOfConfig":"17"},{"size":11763,"mtime":1618217117171,"results":"24","hashOfConfig":"17"},{"size":15104,"mtime":1618827687982,"results":"25","hashOfConfig":"17"},{"size":10130,"mtime":1618659293795,"results":"26","hashOfConfig":"17"},{"size":60038,"mtime":1618658734371,"results":"27","hashOfConfig":"17"},{"size":13949,"mtime":1618828480144,"results":"28","hashOfConfig":"17"},{"size":190,"mtime":1618806397011,"results":"29","hashOfConfig":"17"},{"size":1411,"mtime":1618803773474,"results":"30","hashOfConfig":"17"},{"size":8059,"mtime":1618813262256,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1jpnfy3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/danielo/Development/ui/dashboardV1/src/index.js",["69","70","71","72"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport moralis from \"moralis\";\n\nimport Profile from \"./puiUserProfile\";\nimport Select from \"./puiSelectCommons\";\nimport ViewCommons from \"./puiViewCommons\";\n\nimport BrowserApp from \"./BrowserApp\";\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst initialUser = moralis.User.current();\n\nconst App = () => {\n  const [user, setUser] = useState(initialUser);\n  const [address, setAddress] = useState('');\n  const [twitter, setTwitter] = useState('');\n  const [instagram, setInstagram] = useState('');\n  const [clist, setList] = useState('');\n  const onLogin = async () => {\n\n        const user = await moralis.authenticate();\n        setUser(user);\n        setAddress(user.get(\"ethAddress\"));\n        setInstagram(user.get(\"instagram\"));\n        setTwitter(user.get(\"twitter\"));\n      };\n\n      const onLogout = () => {\n        moralis.User.logOut();\n        setUser(null);\n      };\n\n      const saveTwitter = async () => {\n        user.set( \"twitter\", document.getElementById('twitter').value);\n        await user.save();\n      };\n        \n      const saveInstagram = async () => {\n        user.set( \"instagram\", document.getElementById('instagram').value);\n        await user.save();\n      };\n\n        const saveCommons = async () => {\n        const newCommons = Commons.newCommons();\n        await newCommons.save();\n      };\n\n\n      // A complex subclass of Moralis.Object\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n             // hasSuperHumanStrength: function () {  return this.get(\"strength\") > 18;  },\n              // Instance properties go in an initialize method\n             // initialize: function (attrs, options) { this.sound = \"Rawr\" }\n         }, \n        {  // Class methods\n          //spawn: function(strength) { const monster = new Monster(); monster.set(\"strength\", strength); return monster;  }\n            newCommons: function() { const commons = new Commons(); commons.set(\"name\",document.getElementById('commonsname').value); commons.set(\"contract\",document.getElementById('contract').value); return commons; }\n        });\n\n        const objects =[];\n        let cList = <div></div>;\n        const CommonsList = async () => {\n            const query = new moralis.Query( Commons );\n            const results = await query.find();\n              alert(\"Successfully retrieved \" + results.length + \" scores.\");\n              // Do something with the returned Moralis.Object values\n              for (let i = 0; i < results.length; i++) { const object = results[i]; objects.push( object );  cList +=<div>object.get('name')</div>; alert(cList);}\n            setList(cList);\n            const listItems = objects.map((commonsObject) =>  <li><a href={commonsObject.get('contract')} >{commonsObject.get('name')}</a></li> );\n            setList(listItems);\n        }\n\n\n  if (user) {\n    return <div><button onClick={onLogout}>Logout {address}</button><br/><br/>Twitter : <input id=\"twitter\" /> | <button onClick={saveTwitter}>Save</button><br/><br/>Instagram : <input id=\"instagram\" /> | <button onClick={saveInstagram}>Save</button><br/><br/><a href={twitter} >Twitter - {twitter}</a><br/><br/><a href={instagram} >Instagram - {instagram} </a><br/><br/><br/><br/>Name : <input id=\"commonsname\" /> <br/><br/>Contract : <input id=\"contract\" />| <button onClick={saveCommons}>Save Commons</button> | <button onClick={CommonsList}>List Commons</button><br/><br/><ul>{clist}</ul></div>;\n  }\n  return <button onClick={onLogin}>Login</button>;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n \n <BrowserApp/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n//\n",["73","74"],"/home/danielo/Development/ui/dashboardV1/src/puiSelectCommons.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n\n        window.addEventListener( 'load', async function() { if (user) { await getNetwork(); setUser(user); setAddress(user.get(\"ethAddress\") ); CommonsList(); } }) ;\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                   };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newCommons: function() { \n                                        const commons = new Commons();\n                                        commons.set( \"name\",            document.getElementById( 'commonsname'     ).value  );\n                                        commons.set( \"vaultsymbol\",     document.getElementById( 'vaultsymbol'     ).value  );\n                                        commons.set( \"organizer\",       document.getElementById( 'organizer0'       ).value  ); \n                                        commons.set( \"vaultname\",       document.getElementById( 'vaultname'       ).value  ); \n                                        commons.set( \"confirmations\",   document.getElementById( 'confirmations'   ).value  );\n                                        alert( 'tfer ' + document.getElementById( 'transferrable'   ).checked + '' );\n                                        commons.set( \"transferrable\",   document.getElementById( 'transferrable'   ).checked + '' );\n                                       \n                                        var radios = document.getElementsByName( 'radio-group'   );                                 \n                                        for (var i = 0; i < radios.length; i++) \n                                        {\n                                            if ( radios[i].checked )\n                                            {\n                                               commons.set( \"use\",     radios[i].value  );\n                                            }\n                                        }\n                                        return commons; \n                                    }\n        });\n\n\n        \n        const objects =[];\n        let cList = <div></div>;\n        const CommonsList = async () => \n        {\n            const query = new moralis.Query( Commons );\n            const results = await query.find();\n            for ( let i = 0; i < results.length; i++ ) \n            { \n                const object = results[i];\n                objects.push( object ); \n              //  alert( 'object ' + object + ' ' + object.id);\n                const listItems = objects.map((commonsObject) =>  <li className=\"commonsitem\" key={i}><PrimaryButton href={'/view?commonsId=' + commonsObject.id} >{commonsObject.get('name') + ' - ' + commonsObject.get('vaultname') }</PrimaryButton></li> );\n                setList(listItems);\n            }\n        }\n\n\n        return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><BrandButton href=\"/profile\" >Profile</BrandButton><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show \">\n                          <FlexCol fixed {...{style: {width: '15%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><h1>Community</h1>{clist}</FlexCol>\n                          <FlexCol {...{style: {padding: '8px'}}} ><h1>Personal</h1>\n                            <li className=\"commonsitem\"><BrandButton >John Doe</BrandButton></li>\n                            <li className=\"commonsitem\"><BrandButton >Hugh Jarse</BrandButton></li>\n                          </FlexCol>\n                          <FlexCol />\n                        </Grid>\n\n                      </Panel>\n                    </div>\n               );\n\n\n}\n\nexport default App;\n","/home/danielo/Development/ui/dashboardV1/src/puiUserProfile.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\nimport axios from 'axios';\n\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\n\n\nconst orgaddresses = [];\nfunction App() {\n\n        const [selectedFile, setFile] = useState('');\n        const [selectedFileName, setFileName] = useState('');\n        const [imageHash, setImageHash] = useState('');\n        const [imageUrl, setImageUrl] = useState('profile.jpg');\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [name, setName] = useState('Name');\n        const [clist, setList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [twitter, setTwitter] = useState( 'Twitter' );\n        const [instagram, setInstagram] = useState( 'Instagram' );\n\n        const Avatar = moralis.Object.extend( \"Avatar\", \n        {\n          // Instance methods\n        }, \n        {  \n            newAvatar: function(imageHash,address) { \n                                        const avatar = new Avatar();\n                                        avatar.set( \"image\",        imageHash  );\n                                        avatar.set( \"owneraddress\",      address.toLowerCase()    );\n                                        return avatar; \n                                    }\n        });\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      window.addEventListener( 'load', async function() {    \n                                                       if (user) \n                                                       {\n                                                            await getNetwork();\n                                                            setUser(user);\n                                                            setAddress(user.get(\"ethAddress\") );\n                                                            if ( user.get(\"twitter\") )\n                                                            {\n                                                               setTwitter(user.get(\"twitter\") ); \n                                                            }\n                                                            if ( user.get(\"instagram\") )\n                                                            {\n                                                                setInstagram(user.get(\"instagram\") ); \n                                                            }\n                                                            if ( user.get(\"name\") )\n                                                            {\n                                                                setName(user.get(\"name\") ); \n                                                            }\n                                                            const queryAvatar = new moralis.Query( Avatar );\n                                                            queryAvatar.equalTo( \"owneraddress\", user.get(\"ethAddress\") );\n                                                            const avatarResults = await queryAvatar.find();\n\n                                                            for ( let i = 0; i < avatarResults.length; i++ ) \n                                                            { \n                                                                setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + avatarResults[i].get(\"image\") );    \n                                                            }        \n                                                       }\n\n                                                  }) ;\n\n\n// On file upload (click the upload button)\n\tconst onFileUpload = async () => {\n\n            const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n            let data = new FormData();\n            data.append(\"file\", selectedFile, selectedFile.name );\n            const res = await axios.post(url, data, {\n            maxContentLength: \"Infinity\", \n            headers: {\n              \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n              pinata_api_key: process.env.REACT_APP_PINATA_PUBLIC, \n              pinata_secret_api_key: process.env.REACT_APP_PINATA_PRIVATE,\n            },\n        });\n            console.log(res.data);\n            setImageHash( res.data.IpfsHash );\n            setImageUrl( 'https://gateway.pinata.cloud/ipfs/' + res.data.IpfsHash );\n            \n            const avatar = Avatar.newAvatar( res.data.IpfsHash, user.get( \"ethAddress\" ) );\n            await avatar.save();  \n\t};\n\n// On file select (from the pop up)\n\tconst onFileChange = event => {\n\t\t// Update the state\n\t    setFile(event.target.files[0]);\n\t};\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                    };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n       const save = async () => {  \n                                    if ( document.getElementById( 'name' ).value != '' )\n                                    {\n                                        user.set( \"name\", document.getElementById( 'name' ).value );\n                                    }\n                                    if ( document.getElementById( 'twitter' ).value != '' )\n                                    {\n                                        user.set( \"twitter\", document.getElementById( 'twitter' ).value );\n                                    }\n                                    if ( document.getElementById( 'instagram' ).value != '' )\n                                    {\n                                        user.set( \"instagram\", document.getElementById( 'instagram' ).value ); \n                                    }\n                                    await user.save(); \n\n                                };\n\n\n       return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><BrandButton href=\"/\" >Home</BrandButton><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={name} id=\"name\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={twitter} id=\"twitter\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                       <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><Input placeholder={instagram} id=\"instagram\" type=\"text\"/></FlexCol>\n                          <FlexCol className=\"col-grow-2\"><PrimaryButton onClick={save} >Save</PrimaryButton></FlexCol>\n                        </Grid>\n                        <Grid className=\"grid-show show-outline\">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><input type=\"file\" onChange={onFileChange} />\n\t\t\t\t                                                    <button onClick={onFileUpload}>Upload!</button></FlexCol>\n                          <FlexCol className=\"col-grow-2\"><img className=\"avatarimage\" src={imageUrl} /></FlexCol>\n                        </Grid>\n                      </Panel>\n                    </div>\n               );\n\n\n\n\n\n\n   \n\n}\n\nexport default App;\n","/home/danielo/Development/ui/dashboardV1/src/BrowserApp.js",["112","113","114","115","116","117"],"import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { TransitionGroup, Transition } from \"react-transition-group\";\nimport { play, exit } from './timelines'\n\nimport Deploy from \"./puiDeploy-updated\";\nimport Profile from \"./puiUserProfile\";\nimport Select from \"./puiSelectCommons\";\nimport ViewCommons from \"./puiViewCommons\";\nimport AboutCommons from \"./puiAboutCommons\";\nimport NFTView from \"./puiNFTView\";\nimport Minter from \"./expMinter\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n         \n\n<Route render={({location}) => \n{\n    const { pathname, key } = location\n\n    //const query = new URLSearchParams(location.search);\n    \n   \n    return (\n\n       \n\n                <Switch location={location}>\n                    <Route exact path=\"/\"   component={Select}          />\n                    <Route path=\"/deploy\"   component={Deploy}          />\n                    <Route path=\"/profile\"  component={Profile}         />\n                    <Route path=\"/view\"     component={ViewCommons}     />\n                    <Route path=\"/about\"    component={AboutCommons}    />\n                    <Route path=\"/nftview\"  component={NFTView}         />\n                    <Route path=\"/mint\"     component={Minter}          />\n                </Switch>\n\n          )\n}} />\n\n        </div>\n      </BrowserRouter>\n    )\n  }\n\n\n}\n\n\nexport default App;\n\n\n\n","/home/danielo/Development/ui/dashboardV1/src/puiViewCommons.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"/home/danielo/Development/ui/dashboardV1/src/timelines/index.js",[],"/home/danielo/Development/ui/dashboardV1/src/puiAboutCommons.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\nimport {Tooltip, TooltipTrigger} from 'pivotal-ui/react/tooltip';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [orgList, setOrgList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [aboutHeader,     setAboutHeader] = useState('About - click edit to change');\n        const [aboutParagraph,  setAboutParagraph] = useState('About - click edit to change');\n\n        window.addEventListener( 'load', async function() { if (user) { await getNetwork(); setUser(user); setAddress(user.get(\"ethAddress\") ); getCommons(); } }) ;\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                   };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n       const aboutus = () => {  window.location = '/about?commonsId=' +  window.location.search.substring( 11 ) };\n\n        const editContent = () => {  document.getElementById('paragraph').style='display:block';document.getElementById('header').style='display:block'; };\n\n        const saveContent = async () => {    var commonsId =    window.location.search.substring( 11 );\n                                            const query = new moralis.Query( Commons );\n                                            query.equalTo( \"objectId\", commonsId );\n                                            const results = await query.find();\n                                            var commonsObject;\n                                            for ( let i = 0; i < results.length; i++ ) \n                                            { \n                                                const object = await results[i].fetch();\n                                                if ( document.getElementById( 'about-header' ).value != '' )\n                                                {\n                                                    object.set( \"header\",       document.getElementById( 'about-header' ).value );\n                                                    setAboutHeader( document.getElementById( 'about-header' ).value );\n                                                }\n                                                if ( document.getElementById( 'about-paragraph' ).value != '' )\n                                                {\n                                                    object.set( \"paragraph\",    document.getElementById( 'about-paragraph' ).value );\n                                                    setAboutParagraph( document.getElementById( 'about-paragraph' ).value );\n                                                }\n                                                var resp =  await object.save();\n                                                document.getElementById('paragraph').style='display:none';\n                                                document.getElementById('header').style='display:none';\n                                \n                                            } \n                                };\n\n\n\n        const Organizer = moralis.Object.extend( \"Organizer\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newOrganizer: function(index) { \n                                        const organizer = new Organizer();\n                                        alert( 'org ' + document.getElementById( 'organizer' + index ).value );\n                                        organizer.set( \"address\",        document.getElementById( 'organizer' + index ).value  );\n                                        return organizer; \n                                    }\n        });\n\n        const Avatar = moralis.Object.extend( \"Avatar\", \n        {\n          // Instance methods\n        }, \n        {  \n            newAvatar: function(imageHash,address) { \n                                        const avatar = new Avatar();\n                                        avatar.set( \"image\",        imageHash  );\n                                        avatar.set( \"owneraddress\",      address    );\n                                        return avatar; \n                                    }\n        });\n\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newCommons: function() { \n                                        const commons = new Commons();\n                                        commons.set( \"name\",            document.getElementById( 'commonsname'     ).value  );\n                                        commons.set( \"vaultsymbol\",     document.getElementById( 'vaultsymbol'     ).value  );\n                                        commons.set( \"organizer\",       document.getElementById( 'organizer0'       ).value  ); \n                                        commons.set( \"vaultname\",       document.getElementById( 'vaultname'       ).value  ); \n                                        commons.set( \"confirmations\",   document.getElementById( 'confirmations'   ).value  );\n                                        alert( 'tfer ' + document.getElementById( 'transferrable'   ).checked + '' );\n                                        commons.set( \"transferrable\",   document.getElementById( 'transferrable'   ).checked + '' );\n                                       \n                                        var radios = document.getElementsByName( 'radio-group'   );                                 \n                                        for (var i = 0; i < radios.length; i++) \n                                        {\n                                            if ( radios[i].checked )\n                                            {\n                                               commons.set( \"use\",     radios[i].value  );\n                                       //        alert( 'elements ' + i + ' ' + radios[i].checked );\n                                            }\n                                        }\n                                        return commons; \n                                    }\n        });\n\n        const getCommons = async () =>\n        {\n            var commonsId =    window.location.search.substring( 11 );\n          //  alert( commonsId );\n            const query = new moralis.Query( Commons );\n            query.equalTo( \"objectId\", commonsId );\n            const results = await query.find();\n            var commonsObject;\n            for ( let i = 0; i < results.length; i++ ) \n            { \n                const object = results[i];\n                commonsObject = object;\n                const listItems = <h1>{object.get('name')}</h1>;\n                setList(listItems);\n                if ( object.get('header')  )\n                {\n                   setAboutHeader( object.get('header')  );\n                }\n                if ( object.get('paragraph') )\n                {\n                    setAboutParagraph( object.get('paragraph'));\n                }\n            }\n            const queryOrgs = new moralis.Query( Organizer );\n            queryOrgs.equalTo( \"parentId\", commonsId );\n            const orgResults = await queryOrgs.find();\n            let orglistItems = [];\n            let addresses = [];\n            for ( let i = 0; i < orgResults.length; i++ ) \n            { \n                const object = orgResults[i];\n               \n                const queryAvatar = new moralis.Query( Avatar );\n                queryAvatar.equalTo( \"owneraddress\", object.get( 'address' ) );\n                const avatarResults = await queryAvatar.find();\n                var org;\n                if ( avatarResults.length > 0 )\n                {\n                    org = { address: object.get( 'address' ), url: 'https://gateway.pinata.cloud/ipfs/' + avatarResults[0].get(\"image\") };\n                }\n                else\n                {\n                    org = { address: object.get( 'address' ), url: 'profile.jpg' };\n                }  \n                orglistItems.push( org );          \n            }\n            const orgsDisplay = orglistItems.map((organizer,index) => <TooltipTrigger tooltip={organizer.address}>&nbsp;<img src={organizer.url}  className=\"avatarimage\" />&nbsp;</TooltipTrigger> );\n            setOrgList(orgsDisplay);\n        }\n\n        return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><BrandButton href=\"/\" >Home</BrandButton><BrandButton onClick={aboutus} >About Us</BrandButton><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show \">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} >{clist}</FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n\n                        <Grid className=\"grid-show \">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><h4>Organizers</h4> {orgList}</FlexCol>\n                          <FlexCol className=\"col-grow-2\"/>\n                        </Grid>\n                      </Panel>\n                    <Panel {...{title: 'About', titleCols: [<FlexCol fixed></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show \">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><h3>{aboutHeader}</h3>\n                          </FlexCol>\n                          <FlexCol className=\"col-grow-2\"><PrimaryButton onClick={editContent} >Edit</PrimaryButton><div id=\"header\"><br/><Input id=\"about-header\" type=\"text\"/><br/></div></FlexCol>\n                        </Grid>\n                    <Grid className=\"grid-show \">\n                          <FlexCol fixed {...{style: {width: '35%'}}}/>\n                          <FlexCol {...{style: {padding: '8px'}}} ><p>{aboutParagraph}</p>\n                            \n                            </FlexCol>\n                          <FlexCol className=\"col-grow-2\"><div id=\"paragraph\"><textarea id=\"about-paragraph\"  ></textarea><br/><PrimaryButton onClick={saveContent} >Save</PrimaryButton></div></FlexCol>\n                        </Grid>\n\n  \n                      </Panel>\n                    </div>\n               );\n\n\n}\n\nexport default App;\n","/home/danielo/Development/ui/dashboardV1/src/puiNFTView.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DefaultButton, PrimaryButton, DangerButton, BrandButton} from 'pivotal-ui/react/buttons';\nimport {Grid, FlexCol} from 'pivotal-ui/react/flex-grids';\nimport {Panel} from 'pivotal-ui/react/panels';\nimport {Divider} from 'pivotal-ui/react/dividers';\nimport {Image} from 'pivotal-ui/react/images';\nimport {Input} from 'pivotal-ui/react/inputs';\nimport {Modal} from 'pivotal-ui/react/modal';\nimport {Checkbox} from 'pivotal-ui/react/checkbox';\nimport {Radio, RadioGroup} from 'pivotal-ui/react/radio';\nimport { ethers } from 'ethers'\nimport {Tooltip, TooltipTrigger} from 'pivotal-ui/react/tooltip';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'pivotal-ui/css/modal';\nimport moralis from \"moralis\";\n\n\n\nmoralis.initialize(process.env.REACT_APP_MORALIS_APPLICATION_ID);\nmoralis.serverURL = process.env.REACT_APP_MORALIS_SERVER_URL;\n\nconst orgaddresses = [];\nfunction App() {\n\n        const initialUser = moralis.User.current();\n        const [user, setUser] = useState(initialUser);\n        const [clist, setList] = useState('');\n        const [orgList, setOrgList] = useState('');\n        const [address, setAddress] = useState('Connect Wallet');\n        const [chain, setChain] = useState('');\n        const [connect, toggleConnect] = useState(false);\n        const [aboutHeader,     setAboutHeader] = useState('About Header');\n        const [aboutParagraph,  setAboutParagraph] = useState('About Paragraph');\n\n        window.addEventListener( 'load', async function() { if (user) { await getNetwork(); setUser(user); setAddress(user.get(\"ethAddress\") ); getCommons(); } }) ;\n       const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\nconst getNetwork = () => {\n    provider\n      .getNetwork()\n      .then((network) => {\n        console.log('current chainId - ' + network.chainId)\n        if (network.chainId === 100) {\n          setChain('xDAI')\n          toggleConnect(true)\n        } else if (network.chainId === 4) {\n          setChain('Rinkeby') \n          toggleConnect(true)\n        } else if (network.chainId === 1) {\n          setChain('Mainnet')\n          toggleConnect(true)\n        } else if (network.chainId === 3) {\n          setChain('Ropsten')\n          toggleConnect(true)\n        } else if (network.chainId === 42) {\n          setChain('Kovan')\n          toggleConnect(true)\n        } else {\n          console.log('Pick a supported blockchain!')\n        }\n      })\n      .catch((err) => {\n        alert( 'err ' + err );\n        console.log(err)\n      })\n  }\n\n       const onLogin = async () => {                                        \n                                        await getNetwork();\n                                        const user = await moralis.authenticate();\n                                        setUser(user);\n                                        setAddress(user.get(\"ethAddress\") );\n                                   };\n\n       const onLogout = () => {  moralis.User.logOut(); setUser(null); };\n\n       const aboutus = () => {  window.location = '/about?commonsId=' +  window.location.search.substring( 11 ) };\n\n        const saveContent = async () => {    var commonsId =    window.location.search.substring( 11 );\n                                            const query = new moralis.Query( Commons );\n                                            query.equalTo( \"objectId\", commonsId );\n                                            const results = await query.find();\n                                            var commonsObject;\n                                            for ( let i = 0; i < results.length; i++ ) \n                                            { \n                                                const object = await results[i].fetch();\n                                                if ( document.getElementById( 'about-header' ).value != '' )\n                                                {\n                                                    object.set( \"header\",       document.getElementById( 'about-header' ).value );\n                                                }\n                                                if ( document.getElementById( 'about-paragraph' ).value != '' )\n                                                {\n                                                    object.set( \"paragraph\",    document.getElementById( 'about-paragraph' ).value );\n                                                }\n                                                var resp =  await object.save();\n                                alert( resp );\n                                            } \n                                };\n\n\n\n        const Organizer = moralis.Object.extend( \"Organizer\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newOrganizer: function(index) { \n                                        const organizer = new Organizer();\n                                        alert( 'org ' + document.getElementById( 'organizer' + index ).value );\n                                        organizer.set( \"address\",        document.getElementById( 'organizer' + index ).value  );\n                                        return organizer; \n                                    }\n        });\n\n        const Avatar = moralis.Object.extend( \"Avatar\", \n        {\n          // Instance methods\n        }, \n        {  \n            newAvatar: function(imageHash,address) { \n                                        const avatar = new Avatar();\n                                        avatar.set( \"image\",        imageHash  );\n                                        avatar.set( \"owneraddress\",      address    );\n                                        return avatar; \n                                    }\n        });\n\n        const Commons = moralis.Object.extend( \"Commons\", \n        {\n          // Instance methods\n\n        }, \n        {  \n            newCommons: function() { \n                                        const commons = new Commons();\n                                        commons.set( \"name\",            document.getElementById( 'commonsname'     ).value  );\n                                        commons.set( \"vaultsymbol\",     document.getElementById( 'vaultsymbol'     ).value  );\n                                        commons.set( \"organizer\",       document.getElementById( 'organizer0'       ).value  ); \n                                        commons.set( \"vaultname\",       document.getElementById( 'vaultname'       ).value  ); \n                                        commons.set( \"confirmations\",   document.getElementById( 'confirmations'   ).value  );\n                                        alert( 'tfer ' + document.getElementById( 'transferrable'   ).checked + '' );\n                                        commons.set( \"transferrable\",   document.getElementById( 'transferrable'   ).checked + '' );\n                                       \n                                        var radios = document.getElementsByName( 'radio-group'   );                                 \n                                        for (var i = 0; i < radios.length; i++) \n                                        {\n                                            if ( radios[i].checked )\n                                            {\n                                               commons.set( \"use\",     radios[i].value  );\n                                       //        alert( 'elements ' + i + ' ' + radios[i].checked );\n                                            }\n                                        }\n                                        return commons; \n                                    }\n        });\n\n        const getCommons = async () =>\n        {\n            var commonsId =    window.location.search.substring( 11 );\n          //  alert( commonsId );\n            const query = new moralis.Query( Commons );\n            query.equalTo( \"objectId\", commonsId );\n            const results = await query.find();\n            var commonsObject;\n            for ( let i = 0; i < results.length; i++ ) \n            { \n                const object = results[i];\n                commonsObject = object;\n                const listItems = <h1>{object.get('name') + ' - ' + object.get('vaultname')}</h1>;\n                setList(listItems);\n                setAboutHeader(object.get('header'));\n                setAboutParagraph( object.get('paragraph'));\n            }\n            const queryOrgs = new moralis.Query( Organizer );\n            queryOrgs.equalTo( \"parentId\", commonsId );\n            const orgResults = await queryOrgs.find();\n            let orglistItems = [];\n            let addresses = [];\n            for ( let i = 0; i < orgResults.length; i++ ) \n            { \n                const object = orgResults[i];\n               \n                const queryAvatar = new moralis.Query( Avatar );\n                queryAvatar.equalTo( \"owneraddress\", object.get( 'address' ) );\n                const avatarResults = await queryAvatar.find();\n                var org;\n                if ( avatarResults.length > 0 )\n                {\n                    org = { address: object.get( 'address' ), url: 'https://gateway.pinata.cloud/ipfs/' + avatarResults[i].get(\"image\") };\n                }\n                else\n                {\n                    org = { address: object.get( 'address' ), url: 'profile.jpg' };\n                }  \n                orglistItems.push( org );          \n            }\n            const orgsDisplay = orglistItems.map((organizer,index) => <TooltipTrigger tooltip={organizer.address}>&nbsp;<img src={organizer.url}  className=\"avatarimage\" />&nbsp;</TooltipTrigger> );\n            setOrgList(orgsDisplay);\n        }\n\n        return (\n                    <div className=\"App\" >\n                        <Panel {...{title: 'Overview', titleCols: [<FlexCol fixed><BrandButton href=\"/\" >Home</BrandButton><BrandButton onClick={aboutus} >About Us</BrandButton><PrimaryButton onClick={onLogin} >{address + ' - ' + chain}</PrimaryButton></FlexCol>], style: {  padding: '8px', background: '#f2f2f2'}}}>\n                        <Grid className=\"grid-show \">\n                                            <FlexCol className=\"box-shadow-amb-3\" {...{  style: {height: '250px',  background: '#f8f8f8', margin: '8px 8px', padding: '8px'}}}>\n                                                <div className=\"bg-light-gray pal\" >\n                                                    \n                                                </div>\n                                            </FlexCol>\n                                            <FlexCol className=\"box-shadow-amb-3\" {...{  style: {height: '250px',  background: '#f8f8f8', margin: '8px 8px', padding: '8px'}}}>\n                                                <div className=\"bg-light-gray pal\" >\n                                                    <Image href=\"/nftview?panel=5\" className=\"box-shadow-3 txt-c\" src=\"/panelsSmall/5.jpg\" alt=\"Iweng\"/>\n                                                </div>\n                                            </FlexCol> \n                                            <FlexCol className=\"box-shadow-amb-3\" {...{  style: {height: '250px',  background: '#f8f8f8', margin: '8px 8px', padding: '8px'}}}>\n                                                <div className=\"bg-light-gray pal\" >\n                                                    \n                                                </div>\n                                            </FlexCol>  \n                                        </Grid>\n\n\n  \n                      </Panel>\n                    </div>\n               );\n\n\n}\n\nexport default App;\n","/home/danielo/Development/ui/dashboardV1/src/puiDeploy-updated.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"/home/danielo/Development/ui/dashboardV1/src/MOLCOMMONS_ABI.js",[],"/home/danielo/Development/ui/dashboardV1/src/MOLCOMMONS_BYTECODE.js",[],"/home/danielo/Development/ui/dashboardV1/src/expMinter.js",["199","200","201","202","203","204","205","206","207","208","209","210","211"],"/home/danielo/Development/ui/dashboardV1/src/GlobalContext.js",[],"/home/danielo/Development/ui/dashboardV1/src/ImageUpload.js",[],"/home/danielo/Development/ui/dashboardV1/src/Mint.js",["212","213","214","215","216","217"],{"ruleId":"218","severity":1,"message":"219","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":15},{"ruleId":"218","severity":1,"message":"222","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":14},{"ruleId":"218","severity":1,"message":"223","line":7,"column":8,"nodeType":"220","messageId":"221","endLine":7,"endColumn":19},{"ruleId":"218","severity":1,"message":"224","line":16,"column":7,"nodeType":"220","messageId":"221","endLine":16,"endColumn":10},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"230","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"233","line":7,"column":9,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"234","line":8,"column":9,"nodeType":"220","messageId":"221","endLine":8,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"239","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":25,"column":7,"nodeType":"220","messageId":"221","endLine":25,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":33,"column":16,"nodeType":"220","messageId":"221","endLine":33,"endColumn":23},{"ruleId":"218","severity":1,"message":"242","line":76,"column":14,"nodeType":"220","messageId":"221","endLine":76,"endColumn":22},{"ruleId":"218","severity":1,"message":"243","line":109,"column":13,"nodeType":"220","messageId":"221","endLine":109,"endColumn":18},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"230","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"233","line":7,"column":9,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"239","line":16,"column":8,"nodeType":"220","messageId":"221","endLine":16,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":26,"column":7,"nodeType":"220","messageId":"221","endLine":26,"endColumn":19},{"ruleId":"218","severity":1,"message":"244","line":30,"column":16,"nodeType":"220","messageId":"221","endLine":30,"endColumn":32},{"ruleId":"218","severity":1,"message":"245","line":30,"column":34,"nodeType":"220","messageId":"221","endLine":30,"endColumn":45},{"ruleId":"218","severity":1,"message":"246","line":31,"column":16,"nodeType":"220","messageId":"221","endLine":31,"endColumn":25},{"ruleId":"218","severity":1,"message":"247","line":37,"column":16,"nodeType":"220","messageId":"221","endLine":37,"endColumn":21},{"ruleId":"218","severity":1,"message":"248","line":37,"column":23,"nodeType":"220","messageId":"221","endLine":37,"endColumn":30},{"ruleId":"218","severity":1,"message":"241","line":40,"column":16,"nodeType":"220","messageId":"221","endLine":40,"endColumn":23},{"ruleId":"218","severity":1,"message":"242","line":154,"column":14,"nodeType":"220","messageId":"221","endLine":154,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":157,"column":82,"nodeType":"251","messageId":"252","endLine":157,"endColumn":84},{"ruleId":"249","severity":1,"message":"250","line":161,"column":85,"nodeType":"251","messageId":"252","endLine":161,"endColumn":87},{"ruleId":"249","severity":1,"message":"250","line":165,"column":87,"nodeType":"251","messageId":"252","endLine":165,"endColumn":89},{"ruleId":"253","severity":1,"message":"254","line":197,"column":59,"nodeType":"255","endLine":197,"endColumn":105},{"ruleId":"218","severity":1,"message":"256","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":25},{"ruleId":"218","severity":1,"message":"257","line":3,"column":27,"nodeType":"220","messageId":"221","endLine":3,"endColumn":37},{"ruleId":"218","severity":1,"message":"258","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":14},{"ruleId":"218","severity":1,"message":"259","line":4,"column":16,"nodeType":"220","messageId":"221","endLine":4,"endColumn":20},{"ruleId":"218","severity":1,"message":"260","line":23,"column":13,"nodeType":"220","messageId":"221","endLine":23,"endColumn":21},{"ruleId":"218","severity":1,"message":"261","line":23,"column":23,"nodeType":"220","messageId":"221","endLine":23,"endColumn":26},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"230","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"234","line":8,"column":9,"nodeType":"220","messageId":"221","endLine":8,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"262","line":13,"column":9,"nodeType":"220","messageId":"221","endLine":13,"endColumn":16},{"ruleId":"218","severity":1,"message":"239","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":25,"column":7,"nodeType":"220","messageId":"221","endLine":25,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":34,"column":16,"nodeType":"220","messageId":"221","endLine":34,"endColumn":23},{"ruleId":"218","severity":1,"message":"242","line":77,"column":14,"nodeType":"220","messageId":"221","endLine":77,"endColumn":22},{"ruleId":"218","severity":1,"message":"263","line":148,"column":17,"nodeType":"220","messageId":"221","endLine":148,"endColumn":30},{"ruleId":"218","severity":1,"message":"264","line":156,"column":17,"nodeType":"220","messageId":"221","endLine":156,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":187,"column":121,"nodeType":"255","endLine":187,"endColumn":173},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"230","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"233","line":7,"column":9,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"262","line":13,"column":9,"nodeType":"220","messageId":"221","endLine":13,"endColumn":16},{"ruleId":"218","severity":1,"message":"239","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":25,"column":7,"nodeType":"220","messageId":"221","endLine":25,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":34,"column":16,"nodeType":"220","messageId":"221","endLine":34,"endColumn":23},{"ruleId":"218","severity":1,"message":"242","line":79,"column":14,"nodeType":"220","messageId":"221","endLine":79,"endColumn":22},{"ruleId":"218","severity":1,"message":"265","line":89,"column":49,"nodeType":"220","messageId":"221","endLine":89,"endColumn":62},{"ruleId":"249","severity":1,"message":"250","line":93,"column":102,"nodeType":"251","messageId":"252","endLine":93,"endColumn":104},{"ruleId":"249","severity":1,"message":"250","line":98,"column":105,"nodeType":"251","messageId":"252","endLine":98,"endColumn":107},{"ruleId":"218","severity":1,"message":"266","line":103,"column":53,"nodeType":"220","messageId":"221","endLine":103,"endColumn":57},{"ruleId":"218","severity":1,"message":"263","line":179,"column":17,"nodeType":"220","messageId":"221","endLine":179,"endColumn":30},{"ruleId":"218","severity":1,"message":"264","line":195,"column":17,"nodeType":"220","messageId":"221","endLine":195,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":214,"column":121,"nodeType":"255","endLine":214,"endColumn":173},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"230","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"234","line":8,"column":9,"nodeType":"220","messageId":"221","endLine":8,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"262","line":13,"column":9,"nodeType":"220","messageId":"221","endLine":13,"endColumn":16},{"ruleId":"218","severity":1,"message":"239","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":25,"column":7,"nodeType":"220","messageId":"221","endLine":25,"endColumn":19},{"ruleId":"218","severity":1,"message":"247","line":30,"column":16,"nodeType":"220","messageId":"221","endLine":30,"endColumn":21},{"ruleId":"218","severity":1,"message":"267","line":31,"column":16,"nodeType":"220","messageId":"221","endLine":31,"endColumn":23},{"ruleId":"218","severity":1,"message":"241","line":34,"column":16,"nodeType":"220","messageId":"221","endLine":34,"endColumn":23},{"ruleId":"218","severity":1,"message":"268","line":35,"column":16,"nodeType":"220","messageId":"221","endLine":35,"endColumn":27},{"ruleId":"218","severity":1,"message":"269","line":36,"column":16,"nodeType":"220","messageId":"221","endLine":36,"endColumn":30},{"ruleId":"218","severity":1,"message":"242","line":79,"column":14,"nodeType":"220","messageId":"221","endLine":79,"endColumn":22},{"ruleId":"218","severity":1,"message":"270","line":83,"column":15,"nodeType":"220","messageId":"221","endLine":83,"endColumn":26},{"ruleId":"218","severity":1,"message":"265","line":87,"column":49,"nodeType":"220","messageId":"221","endLine":87,"endColumn":62},{"ruleId":"249","severity":1,"message":"250","line":91,"column":102,"nodeType":"251","messageId":"252","endLine":91,"endColumn":104},{"ruleId":"249","severity":1,"message":"250","line":95,"column":105,"nodeType":"251","messageId":"252","endLine":95,"endColumn":107},{"ruleId":"218","severity":1,"message":"263","line":173,"column":17,"nodeType":"220","messageId":"221","endLine":173,"endColumn":30},{"ruleId":"218","severity":1,"message":"264","line":183,"column":17,"nodeType":"220","messageId":"221","endLine":183,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":202,"column":121,"nodeType":"255","endLine":202,"endColumn":173},{"ruleId":"218","severity":1,"message":"229","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"231","line":3,"column":39,"nodeType":"220","messageId":"221","endLine":3,"endColumn":51},{"ruleId":"218","severity":1,"message":"271","line":3,"column":53,"nodeType":"220","messageId":"221","endLine":3,"endColumn":64},{"ruleId":"218","severity":1,"message":"232","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"233","line":7,"column":9,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"235","line":9,"column":9,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"237","line":11,"column":9,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":11,"column":16,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"239","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":12},{"ruleId":"218","severity":1,"message":"240","line":30,"column":7,"nodeType":"220","messageId":"221","endLine":30,"endColumn":19},{"ruleId":"218","severity":1,"message":"247","line":35,"column":16,"nodeType":"220","messageId":"221","endLine":35,"endColumn":21},{"ruleId":"218","severity":1,"message":"248","line":35,"column":23,"nodeType":"220","messageId":"221","endLine":35,"endColumn":30},{"ruleId":"218","severity":1,"message":"241","line":38,"column":16,"nodeType":"220","messageId":"221","endLine":38,"endColumn":23},{"ruleId":"218","severity":1,"message":"272","line":46,"column":16,"nodeType":"220","messageId":"221","endLine":46,"endColumn":30},{"ruleId":"218","severity":1,"message":"273","line":46,"column":32,"nodeType":"220","messageId":"221","endLine":46,"endColumn":49},{"ruleId":"218","severity":1,"message":"274","line":47,"column":16,"nodeType":"220","messageId":"221","endLine":47,"endColumn":23},{"ruleId":"218","severity":1,"message":"275","line":49,"column":16,"nodeType":"220","messageId":"221","endLine":49,"endColumn":27},{"ruleId":"218","severity":1,"message":"242","line":155,"column":14,"nodeType":"220","messageId":"221","endLine":155,"endColumn":22},{"ruleId":"218","severity":1,"message":"276","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":37},{"ruleId":"218","severity":1,"message":"277","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":12},{"ruleId":"218","severity":1,"message":"278","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":19},{"ruleId":"218","severity":1,"message":"279","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":23},{"ruleId":"218","severity":1,"message":"230","line":5,"column":9,"nodeType":"220","messageId":"221","endLine":5,"endColumn":22},{"ruleId":"218","severity":1,"message":"231","line":5,"column":39,"nodeType":"220","messageId":"221","endLine":5,"endColumn":51},{"ruleId":"218","severity":1,"message":"271","line":5,"column":53,"nodeType":"220","messageId":"221","endLine":5,"endColumn":64},{"ruleId":"218","severity":1,"message":"241","line":28,"column":10,"nodeType":"220","messageId":"221","endLine":28,"endColumn":17},{"ruleId":"218","severity":1,"message":"246","line":29,"column":10,"nodeType":"220","messageId":"221","endLine":29,"endColumn":19},{"ruleId":"218","severity":1,"message":"272","line":31,"column":10,"nodeType":"220","messageId":"221","endLine":31,"endColumn":24},{"ruleId":"218","severity":1,"message":"273","line":31,"column":26,"nodeType":"220","messageId":"221","endLine":31,"endColumn":43},{"ruleId":"249","severity":1,"message":"280","line":133,"column":69,"nodeType":"251","messageId":"252","endLine":133,"endColumn":71},{"ruleId":"253","severity":1,"message":"254","line":279,"column":13,"nodeType":"255","endLine":279,"endColumn":35},{"ruleId":"218","severity":1,"message":"281","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"276","line":1,"column":28,"nodeType":"220","messageId":"221","endLine":1,"endColumn":38},{"ruleId":"218","severity":1,"message":"246","line":17,"column":10,"nodeType":"220","messageId":"221","endLine":17,"endColumn":19},{"ruleId":"218","severity":1,"message":"282","line":18,"column":10,"nodeType":"220","messageId":"221","endLine":18,"endColumn":18},{"ruleId":"218","severity":1,"message":"263","line":65,"column":49,"nodeType":"220","messageId":"221","endLine":65,"endColumn":62},{"ruleId":"218","severity":1,"message":"283","line":77,"column":9,"nodeType":"220","messageId":"221","endLine":77,"endColumn":15},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'ViewCommons' is defined but never used.","'App' is assigned a value but never used.","no-native-reassign",["284"],"no-negated-in-lhs",["285"],"'ReactDOM' is defined but never used.","'DefaultButton' is defined but never used.","'DangerButton' is defined but never used.","'Divider' is defined but never used.","'Image' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","'Checkbox' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'logo' is defined but never used.","'orgaddresses' is assigned a value but never used.","'connect' is assigned a value but never used.","'onLogout' is assigned a value but never used.","'cList' is assigned a value but never used.","'selectedFileName' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'imageHash' is assigned a value but never used.","'clist' is assigned a value but never used.","'setList' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TransitionGroup' is defined but never used.","'Transition' is defined but never used.","'play' is defined but never used.","'exit' is defined but never used.","'pathname' is assigned a value but never used.","'key' is assigned a value but never used.","'Tooltip' is defined but never used.","'commonsObject' is assigned a value but never used.","'addresses' is assigned a value but never used.","'commonsObject' is defined but never used.","'resp' is assigned a value but never used.","'orgList' is assigned a value but never used.","'aboutHeader' is assigned a value but never used.","'aboutParagraph' is assigned a value but never used.","'saveContent' is assigned a value but never used.","'BrandButton' is defined but never used.","'commonsAddress' is assigned a value but never used.","'setCommonsAddress' is assigned a value but never used.","'usecase' is assigned a value but never used.","'deployError' is assigned a value but never used.","'useContext' is defined but never used.","'Mint' is defined but never used.","'ImageUpload' is defined but never used.","'GlobalContext' is defined but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'imageUrl' is assigned a value but never used.","'upload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]