/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.BreadcrumbList = exports.InlineList = exports.OrderedList = exports.UnorderedList = exports.ListItem = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var ListItem = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(ListItem, _React$PureComponent);

  function ListItem() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = ListItem.prototype;

  _proto.render = function render() {
    return _react["default"].createElement("li", this.props);
  };

  return ListItem;
}(_react["default"].PureComponent);

exports.ListItem = ListItem;

var defList = function defList(tagName, classNames, childClassNames) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose(_class, _React$Component);

    function _class() {
      return _React$Component.apply(this, arguments) || this;
    }

    var _proto2 = _class.prototype;

    _proto2.componentDidMount = function componentDidMount() {
      require('../../css/lists');
    };

    _proto2.render = function render() {
      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children,
          unstyled = _this$props.unstyled,
          divider = _this$props.divider,
          others = _objectWithoutPropertiesLoose(_this$props, ["className", "children", "unstyled", "divider"]);

      var classes = (0, _classnames["default"])(classNames(this.props), className);

      if (childClassNames) {
        children = _react["default"].Children.map(children, function (child) {
          return _react["default"].cloneElement(child, {
            className: childClassNames
          });
        });
      }

      return tagName === 'ul' ? _react["default"].createElement("ul", _extends({
        className: classes
      }, others), children) : tagName === 'ol' ? _react["default"].createElement("ol", _extends({
        className: classes
      }, others), children) : null;
    };

    return _class;
  }(_react["default"].Component), _defineProperty(_class, "propTypes", {
    className: _propTypes["default"].string,
    unstyled: _propTypes["default"].bool,
    divider: _propTypes["default"].bool
  }), _temp;
};

var UnorderedList = defList('ul', function (_ref) {
  var unstyled = _ref.unstyled,
      divider = _ref.divider;
  return (0, _classnames["default"])({
    'list-unordered': !unstyled,
    'list-unstyled': unstyled,
    'list-divider': divider
  });
});
exports.UnorderedList = UnorderedList;
var OrderedList = defList('ol', function (_ref2) {
  var unstyled = _ref2.unstyled,
      divider = _ref2.divider;
  return (0, _classnames["default"])({
    'list-unstyled': unstyled,
    'list-divider': divider
  });
});
exports.OrderedList = OrderedList;
var InlineList = defList('ul', function (_ref3) {
  var divider = _ref3.divider;
  return (0, _classnames["default"])('list-inline', {
    'list-inline-divider': divider
  });
});
exports.InlineList = InlineList;
var BreadcrumbList = defList('ul', function () {
  return (0, _classnames["default"])('list-breadcrumb');
});
exports.BreadcrumbList = BreadcrumbList;