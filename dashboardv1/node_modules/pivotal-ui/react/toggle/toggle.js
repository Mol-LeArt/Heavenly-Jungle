/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Toggle = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = _interopRequireDefault(require("lodash.uniqueid"));

var _classnames = _interopRequireDefault(require("classnames"));

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Toggle = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(Toggle, _React$PureComponent);

  function Toggle() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Toggle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/toggle');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        id = _this$props.id,
        size = _this$props.size,
        className = _this$props.className,
        others = _objectWithoutPropertiesLoose(_this$props, ["children", "id", "size", "className"]);

    var toggleId = id || (0, _lodash["default"])('toggle');
    var inputProps = (0, _helpers.mergeProps)(others, {
      className: 'pui-toggle-switch',
      id: toggleId,
      type: 'checkbox'
    });
    return _react["default"].createElement("div", {
      className: "pui-toggle"
    }, _react["default"].createElement("input", inputProps), _react["default"].createElement("label", {
      htmlFor: toggleId,
      className: (0, _classnames["default"])(size, className)
    }, children));
  };

  return Toggle;
}(_react["default"].PureComponent);

exports.Toggle = Toggle;

_defineProperty(Toggle, "propTypes", {
  id: _propTypes["default"].string,
  size: _propTypes["default"].oneOf(['small', 'medium', 'large']),
  type: _propTypes["default"].oneOf(['checkbox'])
});

_defineProperty(Toggle, "defaultProps", {
  size: 'medium',
  type: 'checkbox'
});