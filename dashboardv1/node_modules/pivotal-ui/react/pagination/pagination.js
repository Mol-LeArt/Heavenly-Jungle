/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Pagination = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _buttons = require("../buttons");

var _iconography = require("../iconography");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PaginationButton = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(PaginationButton, _React$PureComponent);

  function PaginationButton() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "click", function (e) {
      var _this$props = _this.props,
          eventKey = _this$props.eventKey,
          onSelect = _this$props.onSelect,
          activePage = _this$props.activePage;
      var newActivePage;
      if (eventKey === 'next') newActivePage = activePage + 1;else if (eventKey === 'prev') newActivePage = activePage - 1;else newActivePage = eventKey;
      onSelect && onSelect(e, {
        eventKey: eventKey,
        newActivePage: newActivePage
      });
    });

    return _this;
  }

  var _proto = PaginationButton.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/pagination');
  };

  _proto.render = function render() {
    // eslint-disable-next-line no-unused-vars
    var _this$props2 = this.props,
        content = _this$props2.content,
        active = _this$props2.active,
        eventKey = _this$props2.eventKey,
        activePage = _this$props2.activePage,
        props = _objectWithoutPropertiesLoose(_this$props2, ["content", "active", "eventKey", "activePage"]);

    var ButtonType = active ? _buttons.BrandButton : _buttons.DefaultButton;
    return _react["default"].createElement(ButtonType, _extends({
      onClick: this.click,
      flat: true,
      className: (0, _classnames["default"])({
        'active': active
      })
    }, props), content);
  };

  return PaginationButton;
}(_react["default"].PureComponent);

_defineProperty(PaginationButton, "propTypes", {
  content: _propTypes["default"].node,
  active: _propTypes["default"].bool,
  onSelect: _propTypes["default"].func,
  eventKey: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  activePage: _propTypes["default"].number
});

var Pagination = /*#__PURE__*/function (_React$PureComponent2) {
  _inheritsLoose(Pagination, _React$PureComponent2);

  function Pagination() {
    return _React$PureComponent2.apply(this, arguments) || this;
  }

  var _proto2 = Pagination.prototype;

  _proto2.componentDidMount = function componentDidMount() {
    require('../../css/pagination');
  };

  _proto2.render = function render() {
    var _this$props3 = this.props,
        items = _this$props3.items,
        next = _this$props3.next,
        prev = _this$props3.prev,
        activePage = _this$props3.activePage,
        onSelect = _this$props3.onSelect,
        className = _this$props3.className,
        props = _objectWithoutPropertiesLoose(_this$props3, ["items", "next", "prev", "activePage", "onSelect", "className"]);

    var elements = [];

    if (items < 6) {
      for (var _i = 0; _i < items; _i++) {
        elements.push(_react["default"].createElement(PaginationButton, _extends({
          key: _i,
          content: _i + 1,
          active: _i + 1 === activePage,
          onSelect: onSelect,
          eventKey: _i + 1,
          activePage: activePage
        }, props)));
      }
    } else {
      if (activePage <= 3) {
        for (var _i2 = 0; _i2 < 4; _i2++) {
          elements.push(_react["default"].createElement(PaginationButton, _extends({
            key: _i2,
            content: _i2 + 1,
            active: _i2 + 1 === activePage,
            onSelect: onSelect,
            eventKey: _i2 + 1,
            activePage: activePage
          }, props)));
        }
      } else {
        elements.push(_react["default"].createElement(PaginationButton, _extends({
          key: 0,
          content: 1,
          active: activePage === 1,
          onSelect: onSelect,
          eventKey: 1,
          activePage: activePage
        }, props)));
        elements.push(_react["default"].createElement("span", {
          key: "ellipsis1"
        }, "\u2026"));
      }

      if (activePage > 3 && activePage < items - 2) {
        for (var _i3 = activePage - 2; _i3 < activePage + 1; _i3++) {
          elements.push(_react["default"].createElement(PaginationButton, _extends({
            key: _i3,
            content: _i3 + 1,
            active: _i3 + 1 === activePage,
            onSelect: onSelect,
            eventKey: _i3 + 1,
            activePage: activePage
          }, props)));
        }
      }

      if (activePage >= items - 2) {
        for (var _i4 = items - 4; _i4 < items; _i4++) {
          elements.push(_react["default"].createElement(PaginationButton, _extends({
            key: _i4,
            content: _i4 + 1,
            active: _i4 + 1 === activePage,
            onSelect: onSelect,
            eventKey: _i4 + 1,
            activePage: activePage
          }, props)));
        }
      } else {
        elements.push(_react["default"].createElement("span", {
          key: "ellipsis2"
        }, "\u2026"));
        elements.push(_react["default"].createElement(PaginationButton, _extends({
          key: items - 1,
          content: items,
          active: items === activePage,
          onSelect: onSelect,
          eventKey: items,
          activePage: activePage
        }, props)));
      }
    }

    var prevButton = _react["default"].createElement(PaginationButton, {
      disabled: activePage === 1,
      onSelect: onSelect,
      eventKey: 'prev',
      content: _react["default"].createElement(_iconography.Icon, {
        src: "chevron_left"
      }),
      iconOnly: true,
      activePage: activePage,
      'aria-label': 'Previous page'
    });

    var nextButton = _react["default"].createElement(PaginationButton, {
      disabled: activePage === items,
      onSelect: onSelect,
      eventKey: 'next',
      content: _react["default"].createElement(_iconography.Icon, {
        src: "chevron_right"
      }),
      iconOnly: true,
      activePage: activePage,
      'aria-label': 'Next page'
    });

    return _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pagination', className),
      role: "group"
    }, prev ? prevButton : null, elements, next ? nextButton : null);
  };

  return Pagination;
}(_react["default"].PureComponent);

exports.Pagination = Pagination;

_defineProperty(Pagination, "propTypes", {
  items: _propTypes["default"].number,
  next: _propTypes["default"].bool,
  prev: _propTypes["default"].bool,
  activePage: _propTypes["default"].number,
  onSelect: _propTypes["default"].func
});

_defineProperty(Pagination, "defaultProps", {
  items: 1,
  next: true,
  prev: true,
  onSelect: function onSelect() {},
  activePage: 1
});