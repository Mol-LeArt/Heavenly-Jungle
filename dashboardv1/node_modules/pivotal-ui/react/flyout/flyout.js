/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Flyout = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _buttons = require("../buttons");

var _iconography = require("../iconography");

var _classnames = _interopRequireDefault(require("classnames"));

var _dialog = require("../dialog");

var _flexGrids = require("../flex-grids");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Flyout = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(Flyout, _React$PureComponent);

  function Flyout() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Flyout.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/flyout');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        dialogClassName = _this$props.dialogClassName,
        buttonAriaLabel = _this$props.buttonAriaLabel,
        header = _this$props.header,
        onHide = _this$props.onHide,
        children = _this$props.children,
        headerClassName = _this$props.headerClassName,
        bodyClassName = _this$props.bodyClassName,
        iconSrc = _this$props.iconSrc,
        props = _objectWithoutPropertiesLoose(_this$props, ["dialogClassName", "buttonAriaLabel", "header", "onHide", "children", "headerClassName", "bodyClassName", "iconSrc"]);

    var mergedDialogClassNames = (0, _classnames["default"])(dialogClassName, 'pui-flyout-dialog');

    var dialogProps = _extends({}, props, {
      hideOnBackdropClick: true,
      hideOnEscKeyDown: true,
      dialogClassName: mergedDialogClassNames,
      onHide: onHide,
      className: 'pui-flyout-dialog-backdrop',
      updateParentZIndex: true
    });

    return _react["default"].createElement(_dialog.Dialog, dialogProps, _react["default"].createElement(_flexGrids.Grid, {
      className: (0, _classnames["default"])('pui-flyout-header', headerClassName)
    }, _react["default"].createElement(_flexGrids.FlexCol, {
      fixed: true
    }, _react["default"].createElement(_buttons.DefaultButton, {
      className: 'pui-flyout-icon-btn',
      iconOnly: true,
      flat: true,
      'aria-label': buttonAriaLabel,
      onClick: onHide,
      icon: _react["default"].createElement(_iconography.Icon, {
        src: iconSrc
      })
    })), _react["default"].createElement(_flexGrids.FlexCol, null, header)), _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-flyout-body', bodyClassName)
    }, children));
  };

  return Flyout;
}(_react["default"].PureComponent);

exports.Flyout = Flyout;

_defineProperty(Flyout, "propTypes", {
  animationDuration: _propTypes["default"].number,
  animationEasing: _propTypes["default"].string,
  bodyClassName: _propTypes["default"].string,
  children: _propTypes["default"].any,
  dialogClassName: _propTypes["default"].string,
  buttonAriaLabel: _propTypes["default"].string,
  header: _propTypes["default"].any,
  headerClassName: _propTypes["default"].string,
  iconSrc: _propTypes["default"].string,
  onHide: _propTypes["default"].func.isRequired,
  show: _propTypes["default"].bool,
  width: _propTypes["default"].string
});

_defineProperty(Flyout, "defaultProps", {
  iconSrc: 'close',
  buttonAriaLabel: 'Close'
});