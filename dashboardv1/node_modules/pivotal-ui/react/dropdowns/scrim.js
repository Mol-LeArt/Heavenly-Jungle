/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Scrim = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Scrim = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Scrim, _React$Component);

  function Scrim() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "scrimClick", function (e) {
      var node = _this.props.containerRef.current;

      if (typeof node.contains !== 'function') {
        node.contains = HTMLDivElement.prototype.contains;
      }

      if (_this.props.disableScrim || node.contains(e.target)) return;

      _this.props.onScrimClick(e);
    });

    return _this;
  }

  var _proto = Scrim.prototype;

  _proto.componentDidMount = function componentDidMount() {
    var document = global.document;
    if (typeof document === 'object') document.documentElement.addEventListener('click', this.scrimClick);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    var document = global.document;
    if (typeof document === 'object') document.documentElement.removeEventListener('click', this.scrimClick);
  };

  _proto.render = function render() {
    return this.props.children;
  };

  return Scrim;
}(_react["default"].Component);

exports.Scrim = Scrim;