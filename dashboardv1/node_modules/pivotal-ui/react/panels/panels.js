/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Panel = void 0;

var _react = _interopRequireDefault(require("react"));

var _flexGrids = require("../flex-grids");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Panel = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Panel, _React$Component);

  function Panel() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Panel.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/panels');

    require('../../css/box-shadows');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        title = _this$props.title,
        titleCols = _this$props.titleCols,
        titleClassName = _this$props.titleClassName,
        panelClassName = _this$props.panelClassName,
        header = _this$props.header,
        headerCols = _this$props.headerCols,
        headerClassName = _this$props.headerClassName,
        bodyClassName = _this$props.bodyClassName,
        loading = _this$props.loading,
        children = _this$props.children,
        footer = _this$props.footer,
        footerClassName = _this$props.footerClassName,
        props = _objectWithoutPropertiesLoose(_this$props, ["className", "title", "titleCols", "titleClassName", "panelClassName", "header", "headerCols", "headerClassName", "bodyClassName", "loading", "children", "footer", "footerClassName"]);

    return _react["default"].createElement("section", _extends({}, props, {
      className: (0, _classnames["default"])('pui-panel-container', className)
    }), (title || titleCols.length > 0) && _react["default"].createElement(_flexGrids.Grid, {
      className: (0, _classnames["default"])('pui-panel-title', titleClassName)
    }, title && _react["default"].createElement(_flexGrids.FlexCol, {
      contentAlignment: "middle",
      className: "h5 em-high type-ellipsis"
    }, title), titleCols.map(function (el, key) {
      return _react["default"].cloneElement(el, {
        key: key
      });
    })), _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-panel bg-white box-shadow-1 border-rounded', panelClassName)
    }, loading && _react["default"].createElement("div", {
      className: "pui-panel-loading-indicator-container"
    }, _react["default"].createElement("div", {
      className: "pui-panel-loading-indicator"
    })), (header || headerCols.length > 0) && _react["default"].createElement(_flexGrids.Grid, {
      className: (0, _classnames["default"])('pui-panel-header', headerClassName)
    }, header && _react["default"].createElement(_flexGrids.FlexCol, {
      contentAlignment: "middle",
      className: "type-ellipsis em-high"
    }, header), headerCols.map(function (el, key) {
      return _react["default"].cloneElement(el, {
        key: key
      });
    })), children && _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-panel-body', bodyClassName)
    }, children), footer && _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-panel-footer type-ellipsis h6', footerClassName)
    }, footer)));
  };

  return Panel;
}(_react["default"].Component);

exports.Panel = Panel;

_defineProperty(Panel, "propTypes", {
  title: _propTypes["default"].string,
  titleCols: _propTypes["default"].array,
  titleClassName: _propTypes["default"].string,
  panelClassName: _propTypes["default"].string,
  header: _propTypes["default"].node,
  headerCols: _propTypes["default"].array,
  headerClassName: _propTypes["default"].string,
  loading: _propTypes["default"].bool,
  bodyClassName: _propTypes["default"].string,
  footer: _propTypes["default"].node,
  footerClassName: _propTypes["default"].string
});

_defineProperty(Panel, "defaultProps", {
  titleCols: [],
  headerCols: []
});