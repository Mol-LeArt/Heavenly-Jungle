/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.useBoundingClientRect = void 0;

var _raf = _interopRequireDefault(require("raf"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _shallowEqual = _interopRequireDefault(require("fbjs/lib/shallowEqual"));

var _mixins = _interopRequireDefault(require("../mixins"));

var _mounted_mixin = _interopRequireDefault(require("../mixins/mounted_mixin"));

var _this = void 0;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var rafify = function rafify(callback) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (0, _raf["default"])(function () {
      return callback.call.apply(callback, [_this].concat(args));
    });
  };
};

var privates = new WeakMap();
var properties = ['width', 'height', 'top', 'right', 'bottom', 'left'];

var useBoundingClientRect = function useBoundingClientRect(Klass) {
  var _temp;

  return _temp = /*#__PURE__*/function (_mixin$with) {
    _inheritsLoose(BoundingClientRect, _mixin$with);

    function BoundingClientRect(props, context) {
      var _this2;

      _this2 = _mixin$with.call(this, props, context) || this;

      _defineProperty(_assertThisInitialized(_this2), "resize", function () {
        var _ref = privates.get(_assertThisInitialized(_this2)) || {},
            prevBoundingClientRect = _ref.boundingClientRect;

        var boundingClientRect = _this2.getBoundingClientRect();

        var isNotEqual = function isNotEqual(property) {
          return boundingClientRect[property] !== prevBoundingClientRect[property];
        };

        if (!prevBoundingClientRect || properties.some(isNotEqual)) {
          _this2.mounted() && _this2.forceUpdate();
        }
      });

      var resolver;
      var containerReady = new Promise(function (resolve) {
        return resolver = resolve;
      });
      containerReady.resolve = resolver;

      var _assertThisInitialize = _assertThisInitialized(_this2),
          state = _assertThisInitialize.state;

      _this2.state = _extends({}, state, {
        container: null,
        containerReady: containerReady
      });
      _this2.resize = rafify(_this2.resize);
      _this2.getBoundingClientRect = _this2.getBoundingClientRect.bind(_assertThisInitialized(_this2));
      return _this2;
    }

    var _proto = BoundingClientRect.prototype;

    _proto.componentDidMount = function componentDidMount() {
      var _this3 = this;

      _mixin$with.prototype.componentDidMount.call(this);

      privates.set(this, {
        resize: this.resize
      });
      window.addEventListener('resize', this.resize);
      this.setState({
        container: _reactDom["default"].findDOMNode(this.component)
      });
      setTimeout(function () {
        return _this3.state.containerReady.resolve(_this3.state.container);
      }, 0);
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      _mixin$with.prototype.componentWillUnmount.call(this);

      var _ref2 = privates.get(this) || {},
          resize = _ref2.resize;

      window.removeEventListener('resize', resize);
      privates["delete"](this);
    };

    _proto.componentDidUpdate = function componentDidUpdate(previousProps) {
      if (!(0, _shallowEqual["default"])(this.props, previousProps)) this.resize();
    };

    _proto.getBoundingClientRect = function getBoundingClientRect() {
      return this.state.container && this.state.container.getBoundingClientRect() || {};
    };

    _proto.render = function render() {
      var _this4 = this;

      var _ref3 = privates.get(this) || {},
          resize = _ref3.resize;

      var boundingClientRect = this.getBoundingClientRect();
      privates.set(this, {
        boundingClientRect: boundingClientRect,
        resize: resize
      });
      return _react["default"].createElement(Klass, _extends({}, this.props, this.state, {
        boundingClientRect: boundingClientRect
      }, {
        ref: function ref(_ref4) {
          return _this4.component = _ref4;
        }
      }));
    };

    return BoundingClientRect;
  }((0, _mixins["default"])(_react["default"].PureComponent)["with"](_mounted_mixin["default"])), _temp;
};

exports.useBoundingClientRect = useBoundingClientRect;