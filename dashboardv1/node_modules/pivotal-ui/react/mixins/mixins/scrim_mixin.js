/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function rootClick(e) {
  var node = _reactDom["default"].findDOMNode(this);

  if (typeof node.contains !== 'function') {
    node.contains = HTMLDivElement.prototype.contains;
  }

  if (this.props.disableScrim || node.contains(e.target)) return;
  this.scrimClick(e);
}

var privates = new WeakMap();

var _default = function _default(ParentClass) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_ParentClass) {
    _inheritsLoose(Scrim, _ParentClass);

    function Scrim(props, context) {
      var _this;

      _this = _ParentClass.call(this, props, context) || this;
      privates.set(_assertThisInitialized(_this), rootClick.bind(_assertThisInitialized(_this)));
      return _this;
    }

    var _proto = Scrim.prototype;

    _proto.scrimClick = function scrimClick() {};

    _proto.componentDidMount = function componentDidMount() {
      var _ParentClass$prototyp;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (_ParentClass.prototype.componentDidMount) (_ParentClass$prototyp = _ParentClass.prototype.componentDidMount).call.apply(_ParentClass$prototyp, [this].concat(args));
      var document = this.props.getDocument ? this.props.getDocument() : global.document;
      if (typeof document === 'object') document.documentElement.addEventListener('click', privates.get(this));
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      var _ParentClass$prototyp2;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      if (_ParentClass.prototype.componentWillUnmount) (_ParentClass$prototyp2 = _ParentClass.prototype.componentWillUnmount).call.apply(_ParentClass$prototyp2, [this].concat(args));
      var document = this.props.getDocument ? this.props.getDocument() : global.document;
      if (typeof document === 'object') document.documentElement.removeEventListener('click', privates.get(this));
    };

    return Scrim;
  }(ParentClass), _defineProperty(_class, "propTypes", {
    disableScrim: _propTypes["default"].bool
  }), _temp;
};

exports["default"] = _default;