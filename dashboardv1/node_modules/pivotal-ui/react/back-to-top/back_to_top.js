/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.BackToTop = void 0;

var _iconography = require("../iconography");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = _interopRequireDefault(require("lodash.throttle"));

var _scroll_top = _interopRequireDefault(require("./scroll_top"));

var _helpers = require("../helpers");

var _mixins = _interopRequireDefault(require("../mixins"));

var _animation_mixin = _interopRequireDefault(require("../mixins/mixins/animation_mixin"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var privates = new WeakMap();

var BackToTop = /*#__PURE__*/function (_mixin$with) {
  _inheritsLoose(BackToTop, _mixin$with);

  function BackToTop(props, context) {
    var _this;

    _this = _mixin$with.call(this, props, context) || this;

    _defineProperty(_assertThisInitialized(_this), "updateScroll", function () {
      var _privates$get = privates.get(_assertThisInitialized(_this)),
          element = _privates$get.element;

      _this.setState({
        visible: _scroll_top["default"].getScrollTop(element, document) > BackToTop.VISIBILITY_HEIGHT
      });
    });

    _defineProperty(_assertThisInitialized(_this), "scrollToTop", function () {
      var key = "pui-back-to-top-" + Date.now();

      _this.setState({
        key: key
      });
    });

    _this.state = {
      visible: false
    };
    return _this;
  }

  var _proto = BackToTop.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/back-to-top');

    this.updateScroll = (0, _lodash["default"])(this.updateScroll, 100);
    var scrollableId = this.props.scrollableId;
    var element = scrollableId && document.getElementById(scrollableId);
    if (element) element.addEventListener('scroll', this.updateScroll);else window.addEventListener('scroll', this.updateScroll);
    privates.set(this, {
      element: element
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    var _privates$get2 = privates.get(this),
        element = _privates$get2.element;

    if (element) element.removeEventListener('scroll', this.updateScroll);else window.removeEventListener('scroll', this.updateScroll);
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        alwaysVisible = _this$props.alwaysVisible,
        scrollableId = _this$props.scrollableId,
        others = _objectWithoutPropertiesLoose(_this$props, ["alwaysVisible", "scrollableId"]);

    var visibleState = this.state.visible;

    var _ref = privates.get(this) || {},
        element = _ref.element;

    var visible = alwaysVisible || visibleState;
    var props = (0, _helpers.mergeProps)(others, {
      className: 'pui-back-to-top',
      style: {
        display: 'inline',
        opacity: this.animate('opacity', visible ? 1 : 0, BackToTop.FADE_DURATION)
      }
    });
    var key = this.state.key;

    if (key) {
      var startValue = _scroll_top["default"].getScrollTop(element, document);

      var scrollTarget = this.animate(key, 0, BackToTop.SCROLL_DURATION, {
        startValue: startValue,
        easing: 'easeOutCubic'
      });

      _scroll_top["default"].setScrollTop(scrollTarget, element, document);

      if (!scrollTarget) setTimeout(function () {
        return _this2.setState({
          key: null
        });
      }, 10);
    }

    return _react["default"].createElement("a", _extends({}, props, {
      onClick: this.scrollToTop,
      "aria-label": "Back to top"
    }), _react["default"].createElement(_iconography.Icon, {
      style: {
        strokeWidth: 100
      },
      src: "arrow_upward"
    }));
  };

  return BackToTop;
}((0, _mixins["default"])(_react["default"].PureComponent)["with"](_animation_mixin["default"]));

exports.BackToTop = BackToTop;

_defineProperty(BackToTop, "propTypes", {
  alwaysVisible: _propTypes["default"].bool,
  scrollableId: _propTypes["default"].string
});

_defineProperty(BackToTop, "FADE_DURATION", 200);

_defineProperty(BackToTop, "VISIBILITY_HEIGHT", 400);

_defineProperty(BackToTop, "SCROLL_DURATION", 200);