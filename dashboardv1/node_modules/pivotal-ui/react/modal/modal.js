/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Modal = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lodash = _interopRequireDefault(require("lodash.uniqueid"));

var _iconography = require("../iconography");

var _buttons = require("../buttons");

var _dialog = require("../dialog");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Modal = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(Modal, _PureComponent);

  function Modal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "titleId", (0, _lodash["default"])('pui-modal-title'));

    return _this;
  }

  var _proto = Modal.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/modal');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        title = _this$props.title,
        size = _this$props.size,
        children = _this$props.children,
        onHide = _this$props.onHide,
        dialogClassName = _this$props.dialogClassName,
        footer = _this$props.footer,
        bodyClassName = _this$props.bodyClassName,
        footerClassName = _this$props.footerClassName,
        props = _objectWithoutPropertiesLoose(_this$props, ["title", "size", "children", "onHide", "dialogClassName", "footer", "bodyClassName", "footerClassName"]);

    var sizeClass = Modal.sizeClasses[size];
    var mergedDialogClassNames = (0, _classnames["default"])('pui-modal-dialog', dialogClassName, sizeClass);
    var width = sizeClass ? null : size;

    var dialogProps = _extends({}, props, {
      hideOnBackdropClick: true,
      hideOnEscKeyDown: true,
      dialogClassName: mergedDialogClassNames,
      onHide: onHide,
      ariaLabelledBy: this.titleId,
      className: 'pui-modal-dialog-backdrop'
    });

    width && (dialogProps.width = width);
    return _react["default"].createElement(_dialog.Dialog, dialogProps, _react["default"].createElement("div", {
      className: "pui-modal-header"
    }, _react["default"].createElement("h3", {
      className: "pui-modal-title em-high",
      id: this.titleId
    }, title)), _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-modal-body', {
        'pui-modal-has-footer': footer
      }, bodyClassName)
    }, children), footer && _react["default"].createElement("div", {
      className: (0, _classnames["default"])('pui-modal-footer', footerClassName)
    }, footer), _react["default"].createElement(_buttons.DefaultButton, {
      className: 'pui-modal-close-btn',
      iconOnly: true,
      flat: true,
      'aria-label': 'Close',
      onClick: onHide,
      icon: _react["default"].createElement(_iconography.Icon, {
        src: "close"
      })
    }));
  };

  return Modal;
}(_react.PureComponent);

exports.Modal = Modal;

_defineProperty(Modal, "propTypes", {
  animationDuration: _propTypes["default"].number,
  animationEasing: _propTypes["default"].string,
  bodyClassName: _propTypes["default"].string,
  children: _propTypes["default"].any,
  dialogClassName: _propTypes["default"].string,
  footer: _propTypes["default"].node,
  footerClassName: _propTypes["default"].string,
  onHide: _propTypes["default"].func.isRequired,
  size: _propTypes["default"].string,
  show: _propTypes["default"].bool,
  title: _propTypes["default"].node
});

_defineProperty(Modal, "sizeClasses", {
  sm: 'pui-modal-sm',
  small: 'pui-modal-sm',
  lg: 'pui-modal-lg',
  large: 'pui-modal-lg'
});