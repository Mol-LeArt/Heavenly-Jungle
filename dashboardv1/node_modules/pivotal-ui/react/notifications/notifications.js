/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.NotificationItem = exports.AlertNotifications = exports.Notifications = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _iconography = require("../iconography");

var _dropdowns = require("../dropdowns");

var _classnames = _interopRequireDefault(require("classnames"));

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultChild = function defaultChild(icon, message) {
  return _react["default"].createElement("div", {
    className: "dropdown-notifications-none",
    role: "presentation"
  }, _react["default"].createElement(_iconography.Icon, {
    src: icon
  }), _react["default"].createElement("p", {
    className: "type-gray em-alt mbn"
  }, message));
};

var Notifications = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(Notifications, _React$PureComponent);

  function Notifications() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Notifications.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/notifications');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        size = _this$props.size,
        children = _this$props.children,
        others = _objectWithoutPropertiesLoose(_this$props, ["size", "children"]);

    var props = (0, _helpers.mergeProps)(others, {
      className: 'dropdown-notifications dropdown-icon-only'
    });

    var numChildren = _react["default"].Children.count(children);

    var badge = numChildren > 0 ? _react["default"].createElement("span", {
      className: "dropdown-notifications-badge"
    }, numChildren) : null;
    var dropdownTitleClasses = (0, _classnames["default"])('dropdown-notifications-title', size, {
      'dropdown-notifications-has-notifications': numChildren > 0
    });

    var dropdownTitle = _react["default"].createElement("div", {
      className: dropdownTitleClasses
    }, _react["default"].createElement(_iconography.Icon, {
      src: "notifications"
    }), badge);

    return _react["default"].createElement(_dropdowns.Dropdown, _extends({
      flat: true,
      showIcon: false,
      title: dropdownTitle
    }, props), children || defaultChild('add', 'no notifications'));
  };

  return Notifications;
}(_react["default"].PureComponent);

exports.Notifications = Notifications;

_defineProperty(Notifications, "propTypes", {
  size: _propTypes["default"].oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
});

var AlertNotifications = /*#__PURE__*/function (_React$PureComponent2) {
  _inheritsLoose(AlertNotifications, _React$PureComponent2);

  function AlertNotifications() {
    return _React$PureComponent2.apply(this, arguments) || this;
  }

  var _proto2 = AlertNotifications.prototype;

  _proto2.render = function render() {
    var _this$props2 = this.props,
        size = _this$props2.size,
        children = _this$props2.children,
        others = _objectWithoutPropertiesLoose(_this$props2, ["size", "children"]);

    var numChildren = _react["default"].Children.count(children);

    var badge = numChildren > 0 && _react["default"].createElement(_iconography.Icon, {
      src: "warning",
      className: "dropdown-notifications-alert"
    });

    var dropdownTitleClasses = (0, _classnames["default"])('dropdown-notifications-title', size, {
      'dropdown-notifications-has-alerts': numChildren > 0
    });

    var dropdownTitle = _react["default"].createElement("div", {
      className: dropdownTitleClasses
    }, _react["default"].createElement(_iconography.Icon, {
      src: "notifications"
    }), badge);

    var props = (0, _helpers.mergeProps)(others, {
      className: 'dropdown-notifications dropdown-icon-only'
    });
    return _react["default"].createElement(_dropdowns.Dropdown, _extends({
      flat: true,
      showIcon: false,
      title: dropdownTitle
    }, props), children || defaultChild('notifications', 'no alerts'));
  };

  return AlertNotifications;
}(_react["default"].PureComponent);

exports.AlertNotifications = AlertNotifications;

_defineProperty(AlertNotifications, "propTypes", {
  size: _propTypes["default"].oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
});

var NotificationItem = /*#__PURE__*/function (_React$PureComponent3) {
  _inheritsLoose(NotificationItem, _React$PureComponent3);

  function NotificationItem() {
    return _React$PureComponent3.apply(this, arguments) || this;
  }

  var _proto3 = NotificationItem.prototype;

  _proto3.render = function render() {
    var _this$props3 = this.props,
        href = _this$props3.href,
        children = _this$props3.children,
        props = _objectWithoutPropertiesLoose(_this$props3, ["href", "children"]);

    return _react["default"].createElement("a", _extends({
      href: href
    }, props), children);
  };

  return NotificationItem;
}(_react["default"].PureComponent);

exports.NotificationItem = NotificationItem;

_defineProperty(NotificationItem, "propTypes", {
  href: _propTypes["default"].string
});