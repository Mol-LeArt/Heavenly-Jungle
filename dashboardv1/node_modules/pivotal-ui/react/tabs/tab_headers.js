/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _classnames2 = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TabHeaders = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(TabHeaders, _React$Component);

  function TabHeaders() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = TabHeaders.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        childArray = _this$props.childArray,
        activeKey = _this$props.activeKey,
        handleClick = _this$props.handleClick,
        isLeft = _this$props.isLeft,
        id = _this$props.id,
        onSelect = _this$props.onSelect;
    var leftTabClasses = 'nav-pills nav-stacked';
    var listChildren = childArray.map(function (child, key) {
      var _child$props = child.props,
          disabled = _child$props.disabled,
          eventKey = _child$props.eventKey,
          tabClassName = _child$props.tabClassName,
          title = _child$props.title;
      var paneId = id + "-pane-" + key;
      var tabId = id + "-tab-" + key;
      var isActive = eventKey === activeKey;

      var onClick = function onClick(e) {
        e.preventDefault();
        if (disabled) return;
        handleClick(e, eventKey, onSelect);
      };

      return _react["default"].createElement("li", {
        key: key,
        role: "presentation",
        className: (0, _classnames2["default"])({
          active: isActive,
          disabled: disabled
        }),
        "aria-expanded": isActive
      }, _react["default"].createElement("a", {
        id: tabId,
        "aria-controls": paneId,
        "aria-selected": isActive,
        role: "tab",
        className: tabClassName,
        tabIndex: "0",
        onClick: onClick,
        href: "#"
      }, title));
    });
    return _react["default"].createElement("ul", {
      role: "tablist",
      className: (0, _classnames2["default"])('nav', (_classnames = {
        'nav-tabs': !isLeft
      }, _classnames[leftTabClasses] = isLeft, _classnames))
    }, listChildren);
  };

  return TabHeaders;
}(_react["default"].Component);

exports["default"] = TabHeaders;

_defineProperty(TabHeaders, "propTypes", {
  activeKey: _propTypes["default"].any,
  childArray: _propTypes["default"].array,
  handleClick: _propTypes["default"].func,
  isLeft: _propTypes["default"].bool,
  id: _propTypes["default"].string.isRequired,
  onSelect: _propTypes["default"].func
});