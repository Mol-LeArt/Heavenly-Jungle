/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.LeftTabs = exports.Tabs = void 0;

var _react = _interopRequireDefault(require("react"));

var _animation_mixin = _interopRequireDefault(require("../mixins/mixins/animation_mixin"));

var _large_tabs = require("./large_tabs");

var _mixins = _interopRequireDefault(require("../mixins"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _media_size = _interopRequireDefault(require("./media_size"));

var _small_tabs = require("./small_tabs");

var _lodash = _interopRequireDefault(require("lodash.uniqueid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var privates = new WeakMap();

var triggerEnteredAndExitedCallbacks = function triggerEnteredAndExitedCallbacks(childArray, _ref) {
  var enteredKey = _ref.enteredKey,
      exitedKey = _ref.exitedKey;
  childArray.forEach(function (_ref2) {
    var _ref2$props = _ref2.props,
        eventKey = _ref2$props.eventKey,
        onEntered = _ref2$props.onEntered,
        onExited = _ref2$props.onExited;

    if (eventKey === enteredKey) {
      onEntered(eventKey);
    } else if (eventKey === exitedKey) {
      onExited(eventKey);
    }
  });
};

var Tabs = /*#__PURE__*/function (_mixin$with) {
  _inheritsLoose(Tabs, _mixin$with);

  function Tabs(props, context) {
    var _this;

    _this = _mixin$with.call(this, props, context) || this;

    _defineProperty(_assertThisInitialized(_this), "setActiveKey", function (key) {
      var previousActiveKey = _this.state.activeKey;

      _this.setState({
        activeKey: key,
        previousActiveKey: previousActiveKey
      });

      if (key !== previousActiveKey) {
        _this.animate('transitionProgress', 0);

        privates.set(_assertThisInitialized(_this), 0);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "checkScreenSize", function () {
      if (_media_size["default"].matches(_this.props.responsiveBreakpoint)) {
        _this.setState({
          smallScreen: false
        });
      } else {
        _this.setState({
          smallScreen: true
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "updateTransitionProgressAndTriggerCallbacks", function (childArray) {
      var animation = _this.props.animation;
      var oldTransitionProgress = privates.get(_assertThisInitialized(_this));

      var transitionProgress = _this.animate('transitionProgress', 1, animation ? Tabs.ANIMATION_TIME : 0);

      _this.triggerTransitionCallbacks({
        childArray: childArray,
        oldTransitionProgress: oldTransitionProgress,
        transitionProgress: transitionProgress
      });

      privates.set(_assertThisInitialized(_this), transitionProgress);
      return transitionProgress;
    });

    _defineProperty(_assertThisInitialized(_this), "triggerTransitionCallbacks", function (_ref3) {
      var childArray = _ref3.childArray,
          oldTransitionProgress = _ref3.oldTransitionProgress,
          transitionProgress = _ref3.transitionProgress;

      if (oldTransitionProgress < 1 && transitionProgress === 1) {
        var exitedKey = _this.state.previousActiveKey;
        var enteredKey = _this.state.activeKey;
        triggerEnteredAndExitedCallbacks(childArray, {
          enteredKey: enteredKey,
          exitedKey: exitedKey
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleClick", function (e, eventKey, callback) {
      if (callback) {
        callback(e, eventKey);
      } else {
        _this.setActiveKey(eventKey);
      }
    });

    var id = _this.props.id;

    if (typeof id === 'undefined') {
      id = (0, _lodash["default"])('pui-react-tabs-');
    }

    _this.state = {
      activeKey: _this.props.defaultActiveKey,
      smallScreen: false,
      id: id
    };
    privates.set(_assertThisInitialized(_this), 0);
    return _this;
  }

  var _proto = Tabs.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/tabs');

    window.addEventListener('resize', this.checkScreenSize);
    this.checkScreenSize();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.defaultActiveKey !== this.props.defaultActiveKey) {
      this.setActiveKey(this.props.defaultActiveKey);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    window.removeEventListener('resize', this.checkScreenSize);
  };

  _proto.render = function render() {
    var children = this.props.children;

    var childArray = _react["default"].Children.toArray(children);

    var transitionProgress = this.updateTransitionProgressAndTriggerCallbacks(childArray);

    if (this.state.smallScreen) {
      return _react["default"].createElement(_small_tabs.SmallTabs, _extends({}, this.state, this.props, {
        transitionProgress: transitionProgress,
        handleClick: this.handleClick
      }));
    }

    var _this$props = this.props,
        __ignore1 = _this$props.animation,
        _ignore2 = _this$props.children,
        __ignore3 = _this$props.defaultActiveKey,
        _this$props$id = _this$props.id,
        id = _this$props$id === void 0 ? this.state.id : _this$props$id,
        __ignore4 = _this$props.responsiveBreakpoint,
        __ignore5 = _this$props.smallScreenClassName,
        props = _objectWithoutPropertiesLoose(_this$props, ["animation", "children", "defaultActiveKey", "id", "responsiveBreakpoint", "smallScreenClassName"]);

    var _this$state = this.state,
        activeKey = _this$state.activeKey,
        previousActiveKey = _this$state.previousActiveKey;
    return _react["default"].createElement(_large_tabs.LargeTabs, _extends({}, props, {
      childArray: childArray,
      activeKey: activeKey,
      previousActiveKey: previousActiveKey,
      id: id,
      handleClick: this.handleClick,
      transitionProgress: transitionProgress
    }));
  };

  return Tabs;
}((0, _mixins["default"])(_react["default"].Component)["with"](_animation_mixin["default"]));

exports.Tabs = Tabs;

_defineProperty(Tabs, "propTypes", {
  actions: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object]),
  activeKey: _propTypes["default"].number,
  animation: _propTypes["default"].bool,
  defaultActiveKey: _propTypes["default"].any,
  id: _propTypes["default"].string,
  largeScreenClassName: _propTypes["default"].string,
  onSelect: _propTypes["default"].func,
  paneWidth: _propTypes["default"].number,
  position: _propTypes["default"].oneOf(['top', 'left']),
  responsiveBreakpoint: _propTypes["default"].oneOf(['xs', 'sm', 'md', 'lg']),
  smallScreenClassName: _propTypes["default"].string,
  tabType: _propTypes["default"].oneOf(['simple', 'simple-alt', 'left']),
  tabWidth: _propTypes["default"].number
});

_defineProperty(Tabs, "defaultProps", {
  animation: true,
  responsiveBreakpoint: 'xs',
  tabType: 'simple'
});

_defineProperty(Tabs, "ANIMATION_TIME", 400);

var LeftTabs = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(LeftTabs, _React$PureComponent);

  function LeftTabs() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto2 = LeftTabs.prototype;

  _proto2.componentDidMount = function componentDidMount() {
    require('../../css/tabs');
  };

  _proto2.render = function render() {
    var _this$props2 = this.props,
        tabWidth = _this$props2.tabWidth,
        props = _objectWithoutPropertiesLoose(_this$props2, ["tabWidth"]);

    return _react["default"].createElement(Tabs, _extends({}, props, {
      tabWidth: tabWidth
    }));
  };

  return LeftTabs;
}(_react["default"].PureComponent);

exports.LeftTabs = LeftTabs;

_defineProperty(LeftTabs, "propTypes", {
  position: _propTypes["default"].oneOf(['top', 'left']),
  tabWidth: _propTypes["default"].number
});

_defineProperty(LeftTabs, "defaultProps", {
  position: 'left',
  tabWidth: 3,
  tabType: 'left'
});