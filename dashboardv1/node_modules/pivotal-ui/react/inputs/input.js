/* (c) Copyright 2020 Pivotal Software, Inc. All Rights Reserved. */
"use strict";

exports.__esModule = true;
exports.Input = void 0;

var _react = _interopRequireDefault(require("react"));

var _iconography = require("../iconography");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Input = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Input, _React$Component);

  function Input() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Input.prototype;

  _proto.componentDidMount = function componentDidMount() {
    require('../../css/inputs');
  };

  _proto.render = function render() {
    var _this$props = this.props,
        size = _this$props.size,
        icon = _this$props.icon,
        innerRef = _this$props.innerRef,
        props = _objectWithoutPropertiesLoose(_this$props, ["size", "icon", "innerRef"]);

    var input = _react["default"].createElement("input", _extends({}, props, {
      ref: innerRef,
      className: (0, _classnames["default"])(props.className, {
        'input-sm': ['sm', 'small'].indexOf(size) !== -1,
        'input-lg': ['lg', 'large'].indexOf(size) !== -1
      })
    }));

    if (!icon) return input;
    return _react["default"].createElement("div", {
      className: "input-icon-container"
    }, input, _react["default"].createElement(_iconography.Icon, {
      src: icon
    }));
  };

  return Input;
}(_react["default"].Component);

exports.Input = Input;

_defineProperty(Input, "propTypes", {
  size: _propTypes["default"].string,
  icon: _propTypes["default"].string,
  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object])
});